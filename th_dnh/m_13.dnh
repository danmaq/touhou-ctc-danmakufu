script_enemy_main
{

#include_function ".\INCLUDE\Enemy.dnh"


//変数宣言--------------------------------------
	let count=0;
	let Level = GetCommonDataDefault( "Level", 1 );
//タスクの作成----------------------------------

task MainAction()
{
	yield;

	_Wait(100);

	loop([3,5,10,20][Level])
	{
		CreateEnemyFromScript("t_ma_01",GetX(),GetY(),rand(2,[2.1,3,4,5][Level]),GetAngleToPlayer()+180+[rand(-15,15),rand(-30,30),rand(-100,100),rand(0,360)][Level],0);
	}



}
task SubAction01()
{
	yield;
	let spmax=GetSpeed();
	let i=0;
	loop(100)
	{
		SetSpeed(SlowDown( spmax , 0 , i , 100 ));
		i++;
		yield;
	}
	_Wait(200);
}

//実行部分---------------------------------------

	@Initialize
	{
		SetLife(40);
		SetInvincibility( 230 );
		MainAction();
		SubAction01();
	}
	
	@MainLoop
	{
		Gone();
		Deletemine();
		yield;
		count++;
		if(count==600){VanishEnemy();}
		//敵画像代わり------------------------------------
		if(int(count/2)==count/2)
		{
			CreateShotA(0,GetX(),GetY(),0);
			SetShotDataA(0,0,0,GetAngle(),0,0,0,RED22);
			SetShotKillTime(0,2);
			FireShot(0);
		}
		//------------------------------------------------
		Collision( 20, 8 );
	}
	@DrawLoop
	{
	}
	@Finalize
	{
		DropItem( 1 , 60 );
		DeleteEnemyShotToItem(ALL);
	}
}

////////////////////////////////////////////////////////////////////////
//仮の使い魔、使い魔の書式の統一が必要なので雛形の作成をお願いします
////////////////////////////////////////////////////////////////////////
script_enemy t_ma_01
{

#include_function ".\INCLUDE\Shadow.dnh"

	let count=0;
	let Level = GetCommonDataDefault( "Level", 1 );

task MainAction()
{
	_Wait(100);
	loop(3)
	{
		_Wait(30);
		loop([1,3,6,12][Level])
		{
			CreateShot02(GetX(),GetY(),0.5,GetAngleToPlayer(),0.05,[1.5,1.8,3,4][Level],RED04,0);
			_Wait([0,15,5,3][Level]);
		}
		_Wait(60);
		CreateItem(ITEM_SCORE,GetX(),GetY());
	}
	VanishEnemy();

}

task SubAction()
{
	yield;
	let spmax=GetSpeed();
	let i=0;
	loop(100)
	{
		SetSpeed(SlowDown( spmax , 0 , i , 100 ));
		i++;
		yield;
	}

}

	@Initialize
	{	
		SetLife(80);
		Gone();
		LoadGraphic(imgcircle_t);
		SubAction();
		MainAction();
	}
	@MainLoop
	{
		Deletemine();
		Gone();
		BehaviorShadow( 0,0 );
		count++;
		yield;
		if(GetKeyState(VK_SLOWMOVE)==KEY_FREE)
		{
			Collision( 16,12 );
			if(int(count/3)==count/3)
			{
				CreateShotA(0,GetX(),GetY(),15);
				SetShotDataA(0,0,0,0,0,0,0,WHITE05);
				SetShotKillTime(0,0);
				FireShot(0);
			}
		}
	}
	@DrawLoop
	{
		SetGraphicRect( 0,0,50,50 );
		DrawRotate( imgcircle_t, count*2 );
	}
	@Finalize
	{
		DestructShadow( 40 );
	}
}
