#東方弾幕風
#Title[Meirin - 通常攻撃1]
#Text[ステージ1A ボス
紅 美鈴

下記以外のスタート＝Easy
スキップ＋スタート＝Normal
ユーザー＋スタート＝Hard
ｽｷｯﾌﾟ＋ﾕｰｻﾞｰ＋ｽﾀｰﾄ＝Lunatic]
#Image[]
#BackGround[Default]
#Player[FREE]
#ScriptVersion[2]

script_enemy_main{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Enemy.dnh"

	// 画像及び効果音ファイル
	let imgBoss=dotBossMeirin;

	// 難易度
	Debug_SetLevel;
	let Lv=GetCommonDataDefault("Level",0);

	// -------------------------------------------------------------------------
	@Initialize{

		// 画像及び効果音をロード
		LoadGraphic(imgBoss);

		// スペルカード設定（カード名、スコア、制限時間、弾削除範囲等）
		SetTimer(36);
		SetShotAutoDeleteClip(20,20,20,20);
		SetEnemyMarker(true);

		// ボスステータス設定（ライフ、ダメージ率等）
		SetLife(2500);
		SetDamageRate(80,40);
		SetX(cenX);
		SetY(minY+120);

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 当たり判定（自弾,体当たり）
		Collision(32,24);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		SetInvincibility(62);
		_Wait(2);

		// 発動
		ExplosionBoss;
		_Wait(60);

		loop{

			// ランダム全方向弾
			loop(3){
				RandomRoundShot;
				_Wait(30);
			}
			_Wait(60);

			Concentration01(30);
			_Wait(30);

			// 移動1＋ランダム弾＋キック弾
			move1;
			RandomShot;
			_Wait(90);
			KickShot;

			// 移動2＋全方向弾
			move2;
			_RoundShot;
			_Wait(150);

		}

	}

	// ランダム全方向弾 --------------------------------------------------------
	task RandomRoundShot{

		let num=[1,2,4,7];
		let way=20;
		let baseSpeed=0.8;
		let maxSpeed=3;
		let waySpeed=(maxSpeed-baseSpeed)/(way-1);
		let wayAngle=360/way;
		let graphic=BLUE01;
		let delay=20;

		SetShotDirectionType(ABSOLUTE);
		loop(num[Lv]){
			let baseAngle=rand(0,360);
			let sort=CreateMixOrderArray(way);
			ascent(let i in 0 .. way){
				let speed=baseSpeed+waySpeed*sort[i];
				let angle=baseAngle+wayAngle*i;
				CreateShot01(GetX,GetY,speed,angle,graphic,delay);
			}
		}

	}

	// ランダム弾 --------------------------------------------------------------
	task RandomShot{

		let num=[45,45,90,90];
		let graphic=GREEN01;
		let delay=5;
		let fr=[2,2,1,1];

		loop(num[Lv]){
			let speed=rand(0.5+0.25*Lv,1+0.5*Lv);
			let angle=rand(0,360);
			SetShotDirectionType(ABSOLUTE);
			CreateShot01(GetX,GetY,speed,angle,graphic,delay);
			_Wait(fr[Lv]);
		}

	}

	// キック弾 ----------------------------------------------------------------
	task KickShot{

		let num=3;
		let way=3+2*Lv;
		let baseSpeed=1+0.2*Lv;
		let numSpeed=(1.5+0.3*Lv-baseSpeed)/(num-1);
		let wayAngle=6;
		let baseAngle=GetAngle-wayAngle*(way-1)/2;

		ascent(let i in 0 .. num){
			let speed=baseSpeed+numSpeed*i;
			ascent(let j in 0 .. way){
				let angle=baseAngle+wayAngle*j;
				_KickShot(speed,angle);
			}
		}

	}

	task _KickShot(let speed, let angle){

		// 初期設定 ----------------------------------------
		let obj=Obj_Create(OBJ_SHOT);

		Obj_SetX(obj,GetX);
		Obj_SetY(obj,GetY);
		Obj_SetSpeed(obj,speed);
		Obj_SetAngle(obj,angle);
		ObjShot_SetGraphic(obj,GREEN12);

		// メイン処理 --------------------------------------
		let kill=30+10*Lv;
		loop(kill){
			if(Obj_BeDeleted(obj)){break;}
			yield;
		}
		if(!Obj_BeDeleted(obj)){ObjShot_FadeDelete(obj);}

	}

	// 全方向弾 ----------------------------------------------------------------
	task _RoundShot{

		let num=[0,2,3,4];
		let speed=2;
		let way=[0,20,40,70];
		let graphic=RED12;
		let delay=0;
		let fr=[60,20,15,12];

		loop(num[Lv]){
			_Wait(fr[Lv]);
			let angle=rand(0,360);
			SetShotDirectionType(ABSOLUTE);
			RoundShot01(GetX,GetY,speed,angle,way[Lv],graphic,delay);
		}

	}

	// 移動1 -------------------------------------------------------------------
	function move1{

		let mx=rand(50,100);
		let x=GetX;
		if(x<GetPlayerX){
			if(x+mx>maxX-80){x-=mx;}
			else{x+=mx;}
		}
		else{
			if(x-mx<minX+80){x+=mx;}
			else{x-=mx;}
		}
		let y=maxY;
		let speed=2.5;
		SetMovePosition01(x,y,speed);

	}

	// 移動2 -------------------------------------------------------------------
	function move2{

		let x=GetX;
		let y=minY+120;
		let power=600;
		let angle=-90;
		let fr=60;
		SetMovePositionHermite(x,y,power,angle,0,0,fr);

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// ロードしたファイルを削除
		DeleteGraphic(imgBoss);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// ボス描画
		let x=0;
		let y=0;
		let sLength=128;
		SetAlpha(255);
		SetColor(255,255,255);
		_DrawChrRectSqr(imgBoss,GetX,GetY,x,y,sLength);

	}

}
