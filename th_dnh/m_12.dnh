script_enemy_main
{

#include_function ".\INCLUDE\Enemy.dnh"


//変数宣言--------------------------------------
	let count=0;
	let Level = GetCommonDataDefault( "Level", 1 );
//タスクの作成----------------------------------

task MainAction()
{
	yield;
	_Wait(100);
	let angle=-180;
	while(angle<180)
	{
		CreateEnemyFromScript("t_ma_01",GetX(),GetY(),2,angle+GetAngleToPlayer(),0);
		angle+=[120,72,51.5,40][Level];
	}
	_Wait(100);
	if(Level != 0)
	{
		SetShotDirectionType(PLAYER);
		CircleShotGap01( [0,45,36,20][Level],[0,1.5,2,2.5][Level],WHITE02,20,0 );
		CircleShotGap01( [0,45,36,20][Level],[0,1.3,1.8,2.3][Level],WHITE02,20,[0,22.5,18,10][Level] );
		SetShotDirectionType(ABSOLUTE);
	}



}
task SubAction01()
{
	yield;
	let spmax=GetSpeed();
	let i=0;
	loop(100)
	{
		SetSpeed(SlowDown( spmax , 0 , i , 100 ));
		i++;
		yield;
	}
	_Wait(440);
	let XX=GetX+rand(-100,100);
	SetMovePositionHermite(XX,GetClipMinY()-50,6*(XX-GetX()),0,100,-90,200);
}

//実行部分---------------------------------------

	@Initialize
	{
		SetLife(50);
		SetInvincibility( 350 );
		MainAction();
		SubAction01();
	}
	
	@MainLoop
	{
		Gone();
		Deletemine();
		yield;
		count++;
		//敵画像代わり------------------------------------
		if(int(count/2)==count/2)
		{
			CreateShotA(0,GetX(),GetY(),0);
			SetShotDataA(0,0,0,GetAngle(),0,0,0,RED22);
			SetShotKillTime(0,2);
			FireShot(0);
		}
		//------------------------------------------------
		Collision( 20, 8 );
	}
	@DrawLoop
	{
	}
	@Finalize
	{
		DropItem( 5 , 20 );
	}
}


////////////////////////////////////////////////////////////////////////
//仮の使い魔、使い魔の書式の統一が必要なので雛形の作成をお願いします
////////////////////////////////////////////////////////////////////////

script_enemy t_ma_01
{

#include_function ".\INCLUDE\Shadow.dnh"

	let count=0;
	let Level=GetCommonData("Level");

task MainAction()
{
	yield;
	let spmax=GetSpeed();
	let i=0;
	loop(100)
	{
		SetSpeed(SlowDown( spmax , 0 , i , 100 ));
		i++;
		yield;
	}
	let angle=-180+GetAngle();
	while(angle<180+GetAngle())
	{
		CreateLaserA(0,GetX(),GetY(),500,12,BLUE01,70);
		SetLaserDataA(0,0,angle,0,0,0,0);
		SetShotKillTime(0,140);
		FireShot(0);
		angle+=90;
	}
	_Wait(120);
	let X=0;
	while(X < 500)
	{
		if(rand(0,100)>[0,0,10,20][Level])
		{
			let angle=-180+GetAngle();
			while(angle<180+GetAngle())
			{
				CreateShot02(GetX+X*cos(angle),GetY+X*sin(angle),0.5,[angle,angle+180][rand(0,100)<50],0.05,5,BLUE11,0);
				angle+=90;
			}
		}
		else
		{
			let angle=-180+GetAngle();
			while(angle<180+GetAngle())
			{
				CreateShot02(GetX+X*cos(angle),GetY+X*sin(angle),0,rand(0,360),0.006,1.2,WHITE11,0);
				angle+=90;
			}
		}
		X+=[20,12,9,5][Level];
	}
}


	@Initialize
	{	
		SetLife(100);
		LoadGraphic(imgcircle_t);
		MainAction();
	}
	@MainLoop
	{
		yield;
		Deletemine();
		Gone();
		BehaviorShadow( 0,0 );
		count++;
		if(count==250){VanishEnemy();}
		if(GetKeyState(VK_SLOWMOVE)==KEY_FREE)
		{
			Collision( 16,12 );
			if(int(count/3)==count/3)
			{
				CreateShotA(0,GetX(),GetY(),15);
				SetShotDataA(0,0,0,0,0,0,0,WHITE05);
				SetShotKillTime(0,0);
				FireShot(0);
			}
		}
	}
	@DrawLoop
	{
		SetGraphicRect( 0,0,50,50 );
		DrawRotate( imgcircle_t, count*2 );
	}
	@Finalize
	{
		DestructShadow( 40 );
		if(count<170){DeleteEnemyShot(CHILD);}
	}
}
