//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	Framework of LunAtic Notation
//	(c)2006 danmaq
//
//		※各上位ライブラリから間接的にインクルードされます。
//			直接インクルードすることはありません。
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	定数(書換不可)
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	定数(書換可能)
//////////////////////////////////////////////////////////////////////

/**	ダメージ音が発生する最小の間隔を定義します。*/
let FLAN_ENEMY_SE_DAMAGE_INTERVAL	= 3;
/**	現在ライフが最大ライフの何%まで削られたらダメージ音が切り替わるか定義します。 */
let FLAN_ENEMY_SE_DAMAGE_CHANGE		= 20;
/**	ダメージを受けたときの効果音を設定します。
*	注意：効果音ファイルは自動的にロードされません(各自でロードする必要があります。
*/
let FLAN_ENEMY_SE_DAMAGE_FILE_A		= "";
/**	ダメージを受けたときの効果音を設定します。
*	現在ライフが最大ライフのFLAN_ENEMY_SE_DAMAGE_CHANGE％以下に削られた時に再生されます。
*	注意：効果音ファイルは自動的にロードされません(各自でロードする必要があります。
*/
let FLAN_ENEMY_SE_DAMAGE_FILE_B		= "";


//////////////////////////////////////////////////////////////////////
//	メンバ変数(書換不可)
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	BGM/効果音関連
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

/**
*	毎フレーム被弾したか確認し、一定間隔でダメージ音を鳴らします。
*	注意:自動的に内部から呼ばれますので直接呼び出すことは通常ありません。
*/
task __PlayDamageSELoop(){
	loop{
		yield;
		if( length( FLAN_ENEMY_SE_DAMAGE_FILE_A ) != 0 && GetHitCount() > 0 ){
			PlaySEEx(
				[ FLAN_ENEMY_SE_DAMAGE_FILE_A, FLAN_ENEMY_SE_DAMAGE_FILE_B ][
					length( FLAN_ENEMY_SE_DAMAGE_FILE_B ) != 0 &&
					m_nFlanEnemyKind == FLAN_ENEMY_KIND_BOSS &&
					GetLife() < m_nFlanEnemyMaxLife * FLAN_ENEMY_SE_DAMAGE_CHANGE / 100
				]
			);
			if( FLAN_ENEMY_SE_DAMAGE_INTERVAL > 1 ){ loop( FLAN_ENEMY_SE_DAMAGE_INTERVAL - 1 ){ yield; } }
		}
	}
}
