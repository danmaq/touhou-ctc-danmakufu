//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	Framework of LunAtic Notation
//	(c)2006 danmaq
//
//		※各上位ライブラリから間接的にインクルードされます。
//			直接インクルードすることはありません。
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	定数(書換不可)
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	定数(書換可能)
//////////////////////////////////////////////////////////////////////

/**	擬似乱数テーブルの長さを設定します。
*	注意:フィールド定義時以外で変更すると誤作動の原因となります。
*/
let FLAN_RANDTABLE_LENGTH		= 255;
/**	擬似乱数テーブルの最小数を設定します。
*	注意:フィールド定義時以外で変更すると誤作動の原因となります。
*/
let FLAN_RANDTABLE_NUM_MIN		= 0;
/**	擬似乱数テーブルの最大数を設定します。
*	注意:フィールド定義時以外で変更すると誤作動の原因となります。
*/
let FLAN_RANDTABLE_NUM_MAX		= 255;
/** ステージレベルのデフォルト値。 */
let FLAN_STAGE_LEVEL_DEFAULT	= 0;


//////////////////////////////////////////////////////////////////////
//	メンバ変数(原則書換不可)
//////////////////////////////////////////////////////////////////////

/** ステージレベルが格納されます。 */
let m_nFlanLevel = FLAN_STAGE_LEVEL_DEFAULT;
/**	絵画など乱数が使えない場面用の擬似乱数テーブルです。 */
let m_anFlanRandomTable = [];
/** 最も基本のカウンタです。
*	現在のスクリプトが動作を始めてからの経過フレーム数が格納されます。
*/
let m_nFlanCount = 0;
/** フェーズ用のカウンタです。
*	フェーズが最後に変化してからの経過フレーム数が格納されます。
*/
let m_nFlanPhaseCount = 0;


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	共通処理
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

/**	該当スクリプトの共通初期化処理です。
*	注意:自動的に内部から呼ばれますので直接呼び出すことは通常ありません。
*/
function __FlanCommonInitialize(){
	if( !GetCommonDataDefault( FLAN_CDNS, false ) ){
		SetCommonData( FLAN_CDNS, true );
		CreateCommonDataArea( FLAN_CDNS );
	}
	ascent( let i in 0..FLAN_RANDTABLE_LENGTH ){ m_anFlanRandomTable = m_anFlanRandomTable ~ [ rand_int( FLAN_RANDTABLE_NUM_MIN, FLAN_RANDTABLE_NUM_MAX ) ]; }
	m_nFlanLevel = GetCommonDataDefaultEx( FLAN_CDNS, FLAN_CD_STAGE_LEVEL, FLAN_STAGE_LEVEL_DEFAULT );
	InitializePhase();
	__FlanCommonMainLoop();
}

/**	該当スクリプトの共通メインループ処理です。
*	主にカウンタ更新などを行います。
*	注意:自動的に内部から呼ばれますので直接呼び出すことは通常ありません。
*/
task __FlanCommonMainLoop(){
	loop{
		yield;
		m_nFlanCount++;
		m_nFlanPhaseCount = m_nFlanCount - m_nFlanPhaseTime;
	}
}
