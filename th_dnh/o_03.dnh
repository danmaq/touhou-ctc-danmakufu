script_enemy_main
{

#include_function ".\INCLUDE\Enemy.dnh"

//変数宣言--------------------------------------
	let count=0;
	let Level=GetCommonData("Level");
	let angle_b=GetAngleToPlayer();
//タスクの作成----------------------------------
task MainAction()
{
	yield;
	CreateEnemyFromScript("t_ma_01",GetX(),GetY(),GetSpeed(),GetAngle(),0);
	_Wait(100+[0,rand(70,150),rand(10,50),rand(0,30)][Level]);
	if(Level>0)
	{
		loop([0,1,5,10][Level])
		{
			CreateShot02(GetX(),GetY(),0,rand(0,360),0.002,[0,0.3,0.2,0.1][Level],[RED05,GREEN05,BLUE05,YELLOW05,PURPLE05,AQUA05,ORANGE05][int(rand(0,6))],0);
		}
	}


}
task SubAction01()
{
	yield;
	let spmax=GetSpeed();
	let i=0;
	loop(100)
	{
		SetSpeed(SlowDown( spmax , 0 , i , 100 ));
		i++;
		yield;
	}
	SetMovePosition01(GetX(),GetClipMinY()-40,0.2);

}

//実行部分---------------------------------------

	@Initialize
	{
		SetLife(20);
		SetInvincibility( 100 );
		SetAngle( GetAngle() );
		MainAction();
		SubAction01();
	}
	
	@MainLoop
	{
		Gone();
		Deletemine();
		yield;
		if(count>100){Collision(16 , 12);}
		count++;
		//敵画像代わり------------------------------------
		if(int(count/2)==count/2 && count>100)
		{
			CreateShotA(0,GetX(),GetY(),0);
			SetShotDataA(0,0,0,GetAngle(),0,0,0,RED22);
			SetShotKillTime(0,2);
			FireShot(0);
		}
		//------------------------------------------------

	}
	@DrawLoop
	{
	}
	@Finalize
	{
		DropItem( 1 , 20 );

	}
}

////////////////////////////////////////////////////////////////////////
//仮の使い魔、使い魔の書式の統一が必要なので雛形の作成をお願いします
////////////////////////////////////////////////////////////////////////

script_enemy t_ma_01
{

#include_function ".\INCLUDE\Shadow.dnh"

	let count=0;

task SubAction01()
{
	yield;
	let spmax=GetSpeed();
	let i=0;
	loop(100)
	{
		SetSpeed(SlowDown( spmax , 0 , i , 100 ));
		i++;
		yield;
	}
	VanishEnemy();

}

	@Initialize
	{	
		SetLife(30);
		SetInvincibility( 120 );
		LoadGraphic(dotCircle6s);
		SubAction01();
	}
	@MainLoop
	{
		Deletemine();
		Gone();
		BehaviorShadow( 0,0 );
		count++;
	
		yield;
	}
	@DrawLoop
	{
		SetTexture(dotCircle6s);
		SetGraphicRect(0,0,64,64);
		if(GetKeyState(VK_SLOWMOVE)==KEY_PUSH||GetKeyState(VK_SLOWMOVE)==KEY_HOLD){
			SetAlpha(127);
			SetGraphicScale(0.8,0.8);
		}
		else{
			SetAlpha(255);
			SetGraphicScale(0.5,0.5);
		}
		SetColor(255,255,255);
		SetGraphicAngle(0,0,count*2);
		DrawGraphic(GetX,GetY);
	}
	@Finalize
	{
		DestructShadow( 40 );
	}
}
