//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇 〜 Concealed the Conclusion
//		ステージPh　ボス　博麗 霊夢　戦闘前
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	ヘッダ
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

#BackGround[User]
#ScriptVersion[2]


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メインスクリプト部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

script_enemy_main{


//////////////////////////////////////////////////////////////////////
//	ライブラリのインクルード
//////////////////////////////////////////////////////////////////////

	#include_function ".\INCLUDE\Boss.dnh"
	#include_function ".\INCLUDE\BOSS\Reimu.dnh"


//////////////////////////////////////////////////////////////////////
//	FLAN設定定義
//////////////////////////////////////////////////////////////////////

	FLAN_BOSS_HOME_X = CL_CEN_X;
	FLAN_BOSS_HOME_Y = CL_MIN_Y + 120;
	FLAN_BOSS_MOVE_MARGIN_SIDE = 0;


//////////////////////////////////////////////////////////////////////
//	定数(書換不可)
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	定数(書換可能)
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	メンバ変数
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	共通処理
//////////////////////////////////////////////////////////////////////

	/**
	*	初期化時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*/
	function onInitializeTHC( nArgv, nLevel ){

		/** 共通初期設定 */
		m_bDemo = true;
		InitializeBoss();

		/** 個別初期設定 */
		SetLife( 1 );
		SetDamageRate( 0, 0 );
		BehaviorBoss( ACT_STAND3 );
		SetPosition( CL_MAX_X + 140, CL_CEN_Y + 70 );
		SetEnemyMarker( false );

	}

	/**
	*	毎フレームごとに呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onMainLoopTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){
	}

	/**
	*	終了時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onFinalizeTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){

		/** 共通終了設定 */
		FinalizeBoss();

	}

	/**
	*	絵画時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onDrawLoopTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){

		/** ボス描画 */
		DrawBoss( m_szImageBoss );

	}

	/**
	*	背景絵画時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onBackGroundTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){
	}


//////////////////////////////////////////////////////////////////////
//	固有処理
//////////////////////////////////////////////////////////////////////

	/**
	*	固有動作のタスクです。onInitializeTHC()より1フレーム後に呼ばれます。
	*	ここに固有の動作を記述します。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*/
	task MainTaskTHC( let nArgv, let nLevel ){

		/** 会話開始 */
		CreateEventFromScript( "Talk" );
		while( GetEventStep() != 1 ){ yield; }

		/** 移動＋ボスID設定 */
		SetEnemyMarker( true );
		let nFrame = 90;
		let nEventCount = m_nFlanCount;
		SetAction( ACT_MOVE, nFrame );
		BossMoveHome( nFrame, true );
		let nBossID = CL_TTH_CHARACTER_NAME_EXPH + CL_TTH_CHARACTER_NAME_EXPH_REIMU;
		SetCommonDataEx( CL_CDNS_TEMP, CL_CD_BOSS_ID, nBossID ); 
		while( GetEventStep() != 2 || m_nFlanCount - nEventCount <= nFrame ){ yield; }

		/** BGM */
		PlayMusicEx( 36 );
		nFrame = 30;
		nEventCount = m_nFlanCount;
		while( OnEvent() || m_nFlanCount - nEventCount <= nFrame ){ yield; }

		/** 戦闘開始 */
		AddLife( -1 );

	}

}


//////////////////////////////////////////////////////////////////////
//====================================================================
//	会話
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メインスクリプト部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

script_event Talk{


//////////////////////////////////////////////////////////////////////
//	ライブラリのインクルード
//////////////////////////////////////////////////////////////////////

	#include_function ".\INCLUDE\Event.dnh"


//////////////////////////////////////////////////////////////////////
//	メンバ変数
//////////////////////////////////////////////////////////////////////

	/** 敵カットイン画像 */
	m_aszImageCutInEnemy = [
		cutReimu,
		cutReimu2,
		cutReimu,
		cutReimu3,
		cutReimu,
		cutReimu,
		cutReimu,
		cutReimu,
		cutReimu,
		cutReimu4
	];


//////////////////////////////////////////////////////////////////////
//	共通処理
//////////////////////////////////////////////////////////////////////

	@MainLoop{

		InCharPlayer( CUT_PLAYER_NORMAL );
		TextOutPlayerC( m_nWaitFrame, "なっ、本当に\n幻想郷はよみがえっていたんだよ" );
		SetStep( 1 );
		TextOutEnemyB( 90, "驚いたわ…" );
		InCharEnemy( CUT_ENEMY_NORMAL );
		TextOutEnemy( "まさか私の夢の世界が\n復活しているなんて" );
		InCharPlayer( CUT_PLAYER_SMILE );
		TextOutPlayer( "しかも単なるジオラマじゃないぜ\nこうやって魔法も撃てるし" );
		TextOutEnemy( "ごめん、私ずっと嘘だと思ってた…" );
		InCharPlayer( CUT_PLAYER_SURPRISE );
		TextOutPlayer( "ほら、私が見せた萃香の欠片だって\n嘘じゃなかったんだ" );
		InCharPlayer( CUT_PLAYER_NORMAL );
		TextOutPlayer( "こいつさえ失くさなければ\nいつでも幻想郷に行けるんだぜ" );
		TextOutEnemy( "そっか…\nもしかしたら幻想郷を失くしてから" );
		TextOutEnemy( "私が最も幻想郷から離れていたのかも" );
		InCharEnemy( CUT_ENEMY_ANGRY );
		TextOutEnemy( "あんな悲しいこともう\n二度と思い出したくないって思ってたし" );
		InCharPlayer( CUT_PLAYER_SMILE );
		TextOutPlayer( "気にするなよ\n絶対ほかの皆もどっかで生きている" );
		TextOutPlayer( "バラバラになっても\n萃香が萃め直してくれている" );
		InCharEnemy( CUT_ENEMY_SMILE );
		TextOutEnemy( "そうね" );
		TextOutEnemy( "それにしてもちょっと不思議な気分ね" );
		InCharPlayer( CUT_PLAYER_NORMAL );
		TextOutPlayer( "ん？" );
		TextOutEnemy( "ほら、幻想郷って\n私の見てた夢だったじゃない？" );
		InCharEnemy( CUT_ENEMY_NORMAL );
		TextOutEnemy( "それが私の元を離れて\n独立した世界になってるんだもの" );
		InCharPlayer( CUT_PLAYER_SERIOUS );
		TextOutPlayer( "…そうだな" );
		TextOutPlayer( "あるいはまたここは別の人が見ている\n夢の中なのかも知れないな" );
		InCharEnemy( CUT_ENEMY_SMILE );
		TextOutEnemy( "そして崩壊する、と" );
		InCharPlayer( CUT_PLAYER_TEMPER );
		TextOutPlayer( "よしてくれ\nあんな悲しいこともう二度と御免だ" );
		TextOutEnemy( "フフ" );
		InCharEnemy( CUT_ENEMY_NORMAL );
		TextOutEnemy( "幻想郷は今日が無駄に\n終わっても明日がある" );
		InCharPlayer( CUT_PLAYER_SERIOUS );
		TextOutPlayer( "何があっても永遠に\n明日が来ることだけは保障される" );
		InCharPlayer( CUT_PLAYER_NORMAL );
		TextOutPlayer( "それが一番だぜ" );
		TextOutEnemy( "…そうね" );
		InCharEnemy( CUT_ENEMY_SMILE );
		TextOutEnemy( "っと、じゃあこの辺で一服しましょうか" );
		TextOutPlayer( "いいぜ、ちょっとはしゃぎ過ぎて\n飛ばしまくってたからな" );
		TextOutPlayer( "本日のメニューは\nとびっきり濃い目の弾幕茶なんてどうだ？" );
		InCharPlayer( CUT_PLAYER_BAD );
		TextOutPlayer( "星柱が立って実に縁起が良いぜ？" );
		InCharEnemy( CUT_ENEMY_ANGRY );
		TextOutEnemy( "奢ってくれるからには私も\nそれなりの見返りを用意しないとね" );
		SetStep( 2 );
		InCharEnemy( CUT_ENEMY_NORMAL );
		TextOutEnemy( "残念だけど私、加減の仕方なんて\n忘れちゃったわ" );
		InCharPlayer( CUT_PLAYER_SURPRISE );
		TextOutPlayer( "おーそいつは怖いな" );
		InCharEnemy( CUT_ENEMY_SMILE );
		TextOutEnemy( "それに加減間違えて\nあんたがバラバラになったら" );
		InCharEnemy( CUT_ENEMY_ANGRY );
		TextOutEnemy( "スキマ妖怪は消息不明だし\nもうおしまいよ？" );
		InCharPlayer( CUT_PLAYER_NORMAL );
		TextOutPlayer( "へっ、その時は一生かけて探してもらうぜ" );
		End();

	}

}
