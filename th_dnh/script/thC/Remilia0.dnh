//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇 〜 Concealed the Conclusion
//		ステージ2A　ボス　レミリア・スカーレット　戦闘前
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	ヘッダ
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

#BackGround[User]
#ScriptVersion[2]


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メインスクリプト部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

script_enemy_main{


//////////////////////////////////////////////////////////////////////
//	ライブラリのインクルード
//////////////////////////////////////////////////////////////////////

	#include_function ".\INCLUDE\Boss.dnh"
	#include_function ".\INCLUDE\BOSS\Remilia.dnh"


//////////////////////////////////////////////////////////////////////
//	FLAN設定定義
//////////////////////////////////////////////////////////////////////

	FLAN_BOSS_HOME_X = CL_CEN_X;
	FLAN_BOSS_HOME_Y = CL_MIN_Y + 120;
	FLAN_BOSS_MOVE_MARGIN_SIDE = 0;


//////////////////////////////////////////////////////////////////////
//	定数(書換不可)
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	定数(書換可能)
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	メンバ変数
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	共通処理
//////////////////////////////////////////////////////////////////////

	/**
	*	初期化時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*/
	function onInitializeTHC( nArgv, nLevel ){

		/** 共通初期設定 */
		m_bDemo = true;
		InitializeBoss();

		/** 個別初期設定 */
		SetLife( 1 );
		SetDamageRate( 0, 0 );
		BehaviorBoss( ACT_STAND4 );
		SetPosition( CL_MIN_X - 140, CL_MIN_Y - 60 );

	}

	/**
	*	毎フレームごとに呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onMainLoopTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){
	}

	/**
	*	終了時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onFinalizeTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){

		/** 共通終了設定 */
		FinalizeBoss();

	}

	/**
	*	絵画時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onDrawLoopTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){

		/** ボス描画 */
		DrawBoss( m_szImageBoss );

	}

	/**
	*	背景絵画時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onBackGroundTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){
	}


//////////////////////////////////////////////////////////////////////
//	固有処理
//////////////////////////////////////////////////////////////////////

	/**
	*	固有動作のタスクです。onInitializeTHC()より1フレーム後に呼ばれます。
	*	ここに固有の動作を記述します。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*/
	task MainTaskTHC( let nArgv, let nLevel ){

		/** 移動＋ボスID設定 */
		let nFrame = 90;
		SetAction( ACT_MOVE, nFrame );
		BossMoveHome( nFrame, true );
		let nBossID = CL_TTH_CHARACTER_NAME_KOUMA + CL_TTH_CHARACTER_NAME_KOUMA_REMILIA;
		SetCommonDataEx( CL_CDNS_TEMP, CL_CD_BOSS_ID, nBossID ); 
		__Wait( nFrame );

		/** 会話開始 */
		CreateEventFromScript( "Talk" );
		while( GetEventStep() != 1 ){ yield; }

		/** BGM */
		PlayMusicEx( 5 );
		nFrame = 30;
		let nEventCount = m_nFlanCount;
		while( OnEvent() || m_nFlanCount - nEventCount <= nFrame ){ yield; }

		/** 戦闘開始 */
		AddLife( - 1 );

	}

}


//////////////////////////////////////////////////////////////////////
//====================================================================
//	会話
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メインスクリプト部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

script_event Talk{


//////////////////////////////////////////////////////////////////////
//	ライブラリのインクルード
//////////////////////////////////////////////////////////////////////

	#include_function ".\INCLUDE\Event.dnh"


//////////////////////////////////////////////////////////////////////
//	メンバ変数
//////////////////////////////////////////////////////////////////////

	/** 敵カットイン画像 */
	m_aszImageCutInEnemy = [
		cutRemilia,
		cutRemilia,
		cutRemilia2,
		cutRemilia,
		cutRemilia,
		cutRemilia,
		cutRemilia,
		cutRemilia,
		cutRemilia,
		cutRemilia
	];


//////////////////////////////////////////////////////////////////////
//	共通処理
//////////////////////////////////////////////////////////////////////

	@MainLoop{

		InCharEnemy( CUT_ENEMY_NORMAL );
		TextOutEnemyC( m_nWaitFrame, "あら珍しいわね" );
		SetNameFromTextEnemy( "レミリア・スカーレット", "永遠に紅い幼き月" );
		TextOutEnemy( "いつもは図書館にしか興味ないくせに\nこっちにまで来るなんて" );
		InCharPlayer( CUT_PLAYER_NORMAL );
		TextOutPlayer( "あぁ、霊夢を探しててな" );
		InCharPlayer( CUT_PLAYER_SERIOUS );
		TextOutPlayer( "あいつが好きなお前なら\n何か知ってることもあるのかな、ってな" );
		DeleteNameEnemy();
		TextOutEnemy( "…知らないわ" );
		InCharPlayer( CUT_PLAYER_SMILE );
		TextOutPlayer( "そうだな、お前が犯人か" );
		InCharEnemy( CUT_ENEMY_AFFECT );
		TextOutEnemy( "どうしてそうなるのよ" );
		TextOutEnemy( "まぁ、せっかくあなたから\nここまで来たのだから" );
		InCharEnemy( CUT_ENEMY_NORMAL );
		TextOutEnemy( "もうちょっとくつろいでいきなさいな" );
		SetStep( 1 );
		TextOutEnemy( "今目の前に居る上質な紅茶で\nティーパーティを開きましょう？" );
		InCharPlayer( CUT_PLAYER_BAD );
		TextOutPlayer( "おっとそんなに暇じゃないぜ" );
		TextOutEnemy( "帰さないわ" );
		End();

	}

}
