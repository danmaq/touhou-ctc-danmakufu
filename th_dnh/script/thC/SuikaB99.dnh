//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇 〜 Concealed the Conclusion
//		ステージEx　ボス　伊吹 萃香　戦闘後
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	ヘッダ
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

#BackGround[User]
#ScriptVersion[2]


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メインスクリプト部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

script_enemy_main{


//////////////////////////////////////////////////////////////////////
//	ライブラリのインクルード
//////////////////////////////////////////////////////////////////////

	#include_function ".\INCLUDE\Boss.dnh"
	#include_function ".\INCLUDE\BOSS\Suika.dnh"


//////////////////////////////////////////////////////////////////////
//	FLAN設定定義
//////////////////////////////////////////////////////////////////////

	FLAN_BOSS_HOME_X = CL_CEN_X;
	FLAN_BOSS_HOME_Y = CL_MIN_Y - 1000;
	FLAN_BOSS_MOVE_MARGIN_SIDE = 0;
	FLAN_ENEMY_COLLISION_A = 0;
	FLAN_ENEMY_COLLISION_B = 0;


//////////////////////////////////////////////////////////////////////
//	定数(書換不可)
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	定数(書換可能)
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	メンバ変数
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//	共通処理
//////////////////////////////////////////////////////////////////////

	/**
	*	初期化時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*/
	function onInitializeTHC( nArgv, nLevel ){

		/** 共通初期設定 */
		m_bDemo = true;
		InitializeBoss();

		/** 個別初期設定 */
		SetLife( 1 );
		SetDamageRate( 0, 0 );
		SetPosition( FLAN_BOSS_HOME_X, FLAN_BOSS_HOME_Y );
		SetEnemyMarker( false );

	}

	/**
	*	毎フレームごとに呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onMainLoopTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){
	}

	/**
	*	終了時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onFinalizeTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){

		/** 共通終了設定 */
		FinalizeBoss();

	}

	/**
	*	絵画時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onDrawLoopTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){
	}

	/**
	*	背景絵画時に呼ばれます。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*	@param nCount 現在のカウンタ値
	*	@param nPhase 現在のフェーズ
	*	@param nPhaseCount 現在のフェーズカウンタ値
	*	@param nPrevPhase 1つ前の状態のフェーズ
	*/
	function onBackGroundTHC( let nArgv, let nLevel, let nCount, let nPhase, let nPhaseCount, let nPrevPhase ){
	}


//////////////////////////////////////////////////////////////////////
//	固有処理
//////////////////////////////////////////////////////////////////////

	/**
	*	固有動作のタスクです。onInitializeTHC()より1フレーム後に呼ばれます。
	*	ここに固有の動作を記述します。
	*	@param nArgv 任意の値
	*	@param nLevel レベル(0〜3)
	*/
	task MainTaskTHC( let nArgv, let nLevel ){

		/** 撃破音 */
		PlaySEEx( seBossExplode );

		/** 会話開始 */
		CreateEventFromScript( "Talk" );
		while( GetEventStep() != 1 ){ yield; }

		/** リザルト */
		SetResult();
		while( OnEvent() ){ yield; }
		let nFrame = 60 * 8;
		let nEventCount = m_nFlanCount;
		while( GetKeyState( VK_SHOT ) != KEY_PUSH && m_nFlanCount - nEventCount <= nFrame ){ yield; }

		/** 戦闘終了 */
		VanishEnemy();

	}

}


//////////////////////////////////////////////////////////////////////
//====================================================================
//	会話
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メインスクリプト部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

script_event Talk{


//////////////////////////////////////////////////////////////////////
//	ライブラリのインクルード
//////////////////////////////////////////////////////////////////////

	#include_function ".\INCLUDE\Event.dnh"


//////////////////////////////////////////////////////////////////////
//	メンバ変数
//////////////////////////////////////////////////////////////////////

	/** 敵カットイン画像 */
	m_aszImageCutInEnemy = [
		cutSuika,
		cutSuika2,
		cutSuika,
		cutSuika,
		cutSuika,
		cutSuika,
		cutSuika,
		cutSuika,
		cutSuika3,
		cutSuika4
	];


//////////////////////////////////////////////////////////////////////
//	共通処理
//////////////////////////////////////////////////////////////////////

	@MainLoop{

		InCharPlayer( CUT_PLAYER_SMILE );
		TextOutPlayerC( m_nWaitFrame, "あー、楽しかったぜ" );
		InCharEnemy( CUT_ENEMY_CRY );
		TextOutEnemy( "うー、ちょっと他所見してたら\n転んじゃっただけよ" );
		TextOutEnemy( "…だからとて負けるとは\n思わなんだけど" );
		TextOutPlayer( "何言ってるんだ、そんなの弾幕勝負を\n中止する理由にならないぜ" );
		InCharPlayer( CUT_PLAYER_BAD );
		TextOutPlayer( "ってか大体お前\n嘘は大嫌いなんじゃなかったんか？" );
		TextOutEnemy( "あー、そこまで嘘ってわけでもないよ？" );
		TextOutEnemy( "まだこの幻想郷結びつきが弱いから\nちょっと気を緩めると綻んじゃうし" );
		TextOutEnemy( "あーあ、こう言うのって\n私ハッキリ言って専門外なのよねー" );
		InCharPlayer( CUT_PLAYER_NORMAL );
		TextOutPlayer( "ああ、そりゃ確かに専門家が必要だな" );
		TextOutEnemy( "と言うわけで、あんたはもう帰りなよ" );
		InCharPlayer( CUT_PLAYER_SERIOUS );
		TextOutPlayer( "何でだよ、幻想郷は私の庭だ。何で私が\n自分の庭から追い出されなきゃならないんだ" );
		TextOutEnemy( "残念ながら幻想郷は建設工事中なもんでね\n…それに" );
		InCharPlayer( CUT_PLAYER_NORMAL );
		TextOutPlayer( "それに…何だよ？" );
		TextOutEnemy( "大事な専門家を\n現実世界に置き忘れてきてない？" );
		TextOutEnemy( "幻想郷が完成するまでゆっくり待って\nそれからあいつと一緒にこっち来なよ" );
		InCharPlayer( CUT_PLAYER_SURPRISE );
		TextOutPlayer( "あぁ、仕方ないな" );
		InCharPlayer( CUT_PLAYER_NORMAL );
		TextOutPlayer( "じゃあ、いつでもここに戻れるように\nお前のかけらを持っていくぜ" );
		SetStep( 1 );
		TextOutEnemyB( 120, "でも人質されるのも嫌い〜" );
		End();

	}

}
