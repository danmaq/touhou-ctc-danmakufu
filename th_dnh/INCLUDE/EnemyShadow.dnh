//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	敵・使い魔などの共通下位ライブラリ
//
//		※各上位ライブラリから間接的にインクルードされます。
//			直接インクルードすることはありません。
//		※敵・子敵スクリプト以外からは使用出来ません。
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	下位ライブラリをインクルード
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////
#include_function ".\INCLUDE\EnemyShotShadow.dnh"

//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	判定関数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	当たり判定を登録(0指定で判定なし)
//	fCollisionA … 自機被弾判定		fCollisionB … 自機接触判定
function Collision( let fCollisionA, let fCollisionB ){
	if( fCollisionA > 0 ){ SetCollisionA( GetX(), GetY(), fCollisionA ); }
	if( fCollisionB > 0 ){ SetCollisionB( GetX(), GetY(), fCollisionB ); }
}

//	指定ドット以上画面から外れたら自殺する
function GoneEx( let nDeadline ){ if( IsOut( nDeadline ) ){ VanishEnemy(); } }

//	32ドット以上画面から外れたら自殺する
function Gone(){ GoneEx( 32 ); }




//////////////////////////////////////////////////////
//追加部分 05/10/25　何か代わりの方法があったら消す
//////////////////////////////////////////////////////


//	ボス手前の雑魚の消去を検出したら自殺
//	ステージスクリプト上ではCommonData"DeleteEnemy"=1のとき
function Deletemine(){if(GetCommonDataDefault("DeleteEnemy",0) == 1){VanishEnemy();}}


// -----------------------------------------------------------------------------
// 一定時間無敵（ボスへのダメージもなし）後、ダメージ率再設定　(Enemy&Shadow)
// ※主にボスが出す使い魔のInitializeに設定し、出現時無敵にする
// -----------------------------------------------------------------------------
task SetDamageRateExDelay( let frame, let damageS, let damageB, let bossDamageS, let bossDamageB ){

	SetDamageRateEx( 0, 0, 0, 0 );
	loop( frame ){ yield; }
	SetDamageRateEx( damageS, damageB, bossDamageS, bossDamageB );

}
