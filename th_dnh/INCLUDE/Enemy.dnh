//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	敵スクリプト専用インクルードライブラリ
//
//		※敵・子敵スクリプト以外からは使用出来ません。
//			それ以外からはインクルードしないでください。
//		※使い魔スクリプトからも使用出来ません。
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	下位ライブラリをインクルード
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////
#include_function ".\INCLUDE\EnemyShadow.dnh"


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メンバ変数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

let m_nEnemyAlpha = 255;	//　絵画のα値（ラストスペル開始時に使用）


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	アイテムドロップ関数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	アイテムtypeをnum個、width範囲に散りばめてを落とす
//	※滅多なことがない限り以下のラッパー関数を使ってください
function _DropItem( let type, let num, let width ){
	if( BeVanished() ){ return; }
	let w = width / 2;
	loop( num ){ CreateItem( type, GetX() + [ RandBlur( w ), 0 ][ num == 1 ], GetY() + [ RandBlur( w ), 0 ][ num == 1 ] ); }
}

/*	↓↓↓以下全て_DropItem()のラッパー関数↓↓↓	*/

//	点アイテムをnum個、width範囲に散りばめて落とす
function DropItem( let num, let width ){ _DropItem( ITEM_SCORE, num, width ); }

//	ボムアイテムを落とす
function DropBomb(){ _DropItem( ITEM_BOMB, 1, 0 ); }

//	エクステンドアイテムを落とす
function DropExtend(){ _DropItem( ITEM_1UP, 1, 0 ); }


//////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------
// その他
// -------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//　ボス戦開始時の爆発エフェクト
function ExplosionBoss{
	Explosion01( GetX, GetY, 255/60, 0.15, 60);
}

//　ラストスペル開始時の集中エフェクト＆フェードイン (※注 task)
//　※@InitializeでSetLifeの後に1回呼び出すこと
//　　@DrawLoopでSetAlpha( m_nEnemyAlpha );すること
//　　frame時間中(m_nEnemyAlpha==0の間)は当たり判定をなくすこと
//　　frame+60時間中(m_nEnemyAlpha<255の間)はダメージが通らないようにすること
task LastSpellEffect( let frame ){
	m_nEnemyAlpha = 0;
	let maxLife = GetLife;
	let disLife = maxLife - 1;
	if( disLife > 0 ){ AddLife( -disLife ); }
	Concentration01( frame );
	loop( frame ){ yield; }
	frame = 60;
	let addLife = maxLife / frame;
	let addAlpha = 255 / frame;
	loop( frame ){
		AddLife( addLife );
		m_nEnemyAlpha += addAlpha;
		yield;
	}
}

/////////////////////////////////////////
//追加060304 雑魚用の描写　つづりの修正
/////////////////////////////////////////
function DrawZako( let szTexFile, let srcx1, let srcy1, let sLength, let scale ){
	SetGraphicScale( scale, scale );
	_DrawChrRectSqr( szTexFile, GetX, GetY, srcx1, srcy1, sLength );
	SetGraphicScale( 1, 1 );
}
