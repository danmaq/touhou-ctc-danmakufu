script_enemy_main
{

#include_function ".\INCLUDE\Enemy.dnh"

//変数宣言--------------------------------------
	let count=0;
	let Level=GetCommonData("Level");
	let angle_b=GetAngleToPlayer();
//タスクの作成----------------------------------
task MainAction()
{
	yield;
	_Wait(50);
	
	let angle=-180;
	while(angle<180)
	{
		CreateEnemyFromScript("t_ma_01",GetX(),GetY(),0,GetAngleToPlayer()+angle,0);
		angle+=60;
	}
	_Wait(40);

	let angle_b=GetAngleToPlayer()+90;
	let gap=8.23;
	while(1)
	{
		let angle=-gap*(Level+2);
		while(angle<=0)
		{
			CreateShot01(GetX(),GetY(),2,angle+angle_b+GetAngleToPlayer(),BLUE02,0);
			angle+=gap;
		}
		let angle=-gap*(Level+2);
		while(angle<=0)
		{
			CreateShot01(GetX(),GetY(),2,180-angle+angle_b+GetAngleToPlayer(),BLUE02,0);
			angle+=gap;
		}
		angle_b+=gap*[2.3,3.3,4.2,5,3][Level];
		_Wait([30,15,10,7][Level]);
	}





}
task SubAction01()
{
	yield;
		let spmax=GetSpeed();
		let i=0;
		loop(50)
		{
			SetSpeed(SlowDown( spmax , 0 , i , 50 ));
			i++;
			yield;
		}
		_Wait(30);
	if(GetArgument() != 3)
	{
		SetAngle([0,180][GetArgument()]);
		SetSpeed(0.5);
	}
	if(GetArgument()==3)
	{
		SetAngle(-90);
		SetSpeed(0.3);
	}
}

//実行部分---------------------------------------

	@Initialize
	{
		SetLife(100);
		SetInvincibility( 160 );
		SetAngle( GetAngle() );
		MainAction();
		SubAction01();
	}
	
	@MainLoop
	{
		Gone();
		Deletemine();
		yield;
		Collision(16 , 12);
		count++;
		//敵画像代わり------------------------------------
		if(int(count/2)==count/2)
		{
			CreateShotA(0,GetX(),GetY(),0);
			SetShotDataA(0,0,0,GetAngle(),0,0,0,RED22);
			SetShotKillTime(0,2);
			FireShot(0);
		}
		//------------------------------------------------

	}
	@DrawLoop
	{
	}
	@Finalize
	{
		DropItem( 2 , 20 );
	}
}

////////////////////////////////////////////////////////////////////////
//仮の使い魔、使い魔の書式の統一が必要なので雛形の作成をお願いします
////////////////////////////////////////////////////////////////////////

script_enemy t_ma_01
{

#include_function ".\INCLUDE\Shadow.dnh"

	let count=0;
	let Level=GetCommonData("Level");

task MainAction()
{
	yield;
	_Wait(10);
	let angle=0;
	while(1)
	{
		CreateShotA(0,GetX(),GetY(),0);
		SetShotDataA(0,0,0.5,count*5,0.5,-0.002,0,RED11);
		SetShotDataA(0,80,NULL,NULL,0,[0.05,0.05,0.07,0.1][Level],[1.5,1.5,2,3][Level],RED11);
		FireShot(0);
		CreateShotA(0,GetX(),GetY(),0);
		SetShotDataA(0,0,0.5,count*5,-0.5,-0.002,0,RED11);
		SetShotDataA(0,80,NULL,NULL,0,[0.05,0.05,0.07,0.1][Level],[1.5,1.5,2,3][Level],RED11);
		FireShot(0);
		loop(3){yield;}
	}

}

task SubAction01()
{
	yield;
	SetCoordinateType(COODINATE_TYPE_PARENT);
	let angle_b=GetAngle();
	while(1)
	{
		SetX(70*cos(angle_b));
		SetY(70*sin(angle_b));
		angle_b+=3.1;
		yield;
	}
}

	@Initialize
	{	
		SetLife(70);
		LoadGraphic(imgcircle_t);
		MainAction();
		SubAction01();
	}
	@MainLoop
	{
		yield;
		Deletemine();
		Gone();
		BehaviorShadow( 0,0 );
		count++;
	
		if(GetKeyState(VK_SLOWMOVE)==KEY_FREE)
		{
			Collision( 16,12 );
			if(int(count/3)==count/3)
			{
				CreateShotA(0,GetX(),GetY(),15);
				SetShotDataA(0,0,0,0,0,0,0,WHITE05);
				SetShotKillTime(0,0);
				FireShot(0);
			}
		}
	}
	@DrawLoop
	{
		SetGraphicRect( 0,0,50,50 );
		DrawRotate( imgcircle_t, count*2 );
	}
	@Finalize
	{
		DestructShadow( 40 );
	}
}
