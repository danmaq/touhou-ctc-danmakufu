#東方弾幕風
#Title[Remilia - スペルカード3]
#Text[ステージ2A ボス
レミリア・スカーレット

下記以外のスタート＝Easy
スキップ＋スタート＝Normal
ユーザー＋スタート＝Hard
ｽｷｯﾌﾟ＋ﾕｰｻﾞｰ＋ｽﾀｰﾄ＝Lunatic]
#Image[]
#BackGround[Default]
#Player[FREE]
#ScriptVersion[2]

script_enemy_main{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Enemy.dnh"

	// 画像及び効果音ファイル
	let imgBoss=dotBossRemilia;

	// 難易度
	Debug_SetLevel;
	let Lv=GetCommonDataDefault("Level",0);

	// -------------------------------------------------------------------------
	@Initialize{

		// 画像及び効果音をロード
		LoadGraphic(imgBoss);

		// スペルカード設定（カード名、スコア、制限時間、弾削除範囲等）
		SetText("＊符「＊＊＊」");
		SetScore(100000);
		SetTimer(67);
		SetShotAutoDeleteClip(64,64,64,64);
		SetEnemyMarker(true);

		// ボスステータス設定（ライフ、ダメージ率等）
		SetLife(500);
		SetDamageRate(15,10);

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 当たり判定（自弾,体当たり）
		Collision(32,24);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		SetInvincibility(242);
		_Wait(2);

		// 初期移動
		let fr=180;
		let x=cenX;
		let y=minY+120+RandBlur(1);
		SetMovePosition02(x,y,fr);
		_Wait(fr);

		let assign=1;

		loop{

			// 扇状トラップ弾
			Concentration01(60);
			_Wait(60);
			WideTrapShot(assign);
			_Wait(300);

			// 移動
			move(90);
			_Wait(120);

			assign*=-1;

		}

	}

	// 扇状トラップ弾 ----------------------------------------------------------
	function WideTrapShot(let assign){

		let way=5+2*Lv;
		let wayAngle=(165+15*Lv)/(way-1);
		let baseAngle=GetAngleToPlayer-wayAngle*(way-1)/2;

		SetShotDirectionType(ABSOLUTE);
		ascent(let i in 0 .. way){
			let angle=baseAngle+wayAngle*i;
			TrapShot(angle,assign);
		}

	}

	// トラップ弾 --------------------------------------------------------------
	task TrapShot(let angle, let assign){

		// 初期設定 ----------------------------------------
		let obj=Obj_Create(OBJ_SHOT);

		Obj_SetX(obj,GetX);
		Obj_SetY(obj,GetY);
		Obj_SetAngle(obj,angle);
		ObjShot_SetGraphic(obj,RED03);
		Obj_SetAutoDelete(obj,false);

		// メイン処理 --------------------------------------
		// 減速
		let fr=105;
		let speed=5.8;
		let addSpeed=-speed/fr;
		loop(fr){
			if(Obj_BeDeleted(obj)){break;}
			speed+=addSpeed;
			Obj_SetSpeed(obj,speed);
			yield;
		}

		// 方向転換
		if(!Obj_BeDeleted(obj)){
			Obj_SetSpeed(obj,3);
			Obj_SetAngle(obj,angle+172*assign);
		}

		// 消滅設定
		setAutoDelete;

		// トラップ設置
		let way=8;
		let gapLength=25;
		speed=0;
		let maxSpeed=1.2;
		let accSpeed=maxSpeed/120;
		let baseAngle=angle;
		let wayAngle=360/way;
		let graphic=RED21;
		let delay=20;
		fr=20;

		loop{
			if(Obj_BeDeleted(obj)){break;}
			ascent(let i in 0 .. way){
				angle=baseAngle+wayAngle*i;
				let x=GetGapX(Obj_GetX(obj),gapLength,angle);
				let y=GetGapY(Obj_GetY(obj),gapLength,angle);
				if(Lv>=2){angle+=155*assign;}
				CreateShot02(x,y,speed,angle,accSpeed,maxSpeed,graphic,delay);
			}
			loop(fr){yield;}
		}

		// 消滅設定 ----------------------------------------
		task setAutoDelete{

			loop(180){yield;}
			Obj_SetAutoDelete(obj,true);

		}

	}

	// 移動 --------------------------------------------------------------------
	function move(let fr){

		let x=GetX;
		let y=GetY;
		let mx=rand(40,80);
		let my=rand(0,10);
		if(x>=GetPlayerX){
			if(x-mx>=minX+100){mx=-mx;}
		}
		else{
			if(x+mx>=maxX-100){mx=-mx;}
		}
		if(y>=minY+120){my=-my;}
		x+=mx;
		y+=my;
		let power=GetGapLength(GetX,GetY,x,y)*2;
		let angle=GetGapAngle(GetX,GetY,x,y);
		SetMovePositionHermite(x,y,power,angle,0,0,fr);

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// アイテム放出
		if(Lv>0){DropItem(16,80);}

		// ロードしたファイルを削除
		DeleteGraphic(imgBoss);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// ボス描画
		let x=0;
		let y=0;
		let sLength=128;
		SetAlpha(255);
		SetColor(255,255,255);
		_DrawChrRectSqr(imgBoss,GetX,GetY,x,y,sLength);

	}

}
