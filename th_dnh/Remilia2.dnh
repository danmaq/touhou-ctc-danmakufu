#東方弾幕風
#Title[Remilia - 通常攻撃2]
#Text[ステージ2A ボス
レミリア・スカーレット

下記以外のスタート＝Easy
スキップ＋スタート＝Normal
ユーザー＋スタート＝Hard
ｽｷｯﾌﾟ＋ﾕｰｻﾞｰ＋ｽﾀｰﾄ＝Lunatic]
#Image[]
#BackGround[Default]
#Player[FREE]
#ScriptVersion[2]

script_enemy_main{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Enemy.dnh"

	// 画像及び効果音ファイル
	let imgBoss=dotBossRemilia;
	let imgShadow=dotCircle6s;
	let seHidden=seShadowHidden;
	let seSudden=seShadowSudden;

	// 難易度
	Debug_SetLevel;
	let Lv=GetCommonDataDefault("Level",0);

	// -------------------------------------------------------------------------
	@Initialize{

		// 画像及び効果音をロード
		LoadGraphic(imgBoss);
		LoadGraphic(imgShadow);
		LoadSE(seHidden);
		LoadSE(seSudden);

		// スペルカード設定（カード名、スコア、制限時間、弾削除範囲等）
		SetTimer(38);
		SetShotAutoDeleteClip(32,32,32,32);
		SetEnemyMarker(true);

		// ボスステータス設定（ライフ、ダメージ率Shot%,Bomb%等）
		SetLife(2500);
		SetDamageRate(100,50);

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 当たり判定（自弾,体当たり）
		Collision(32,24);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		SetInvincibility(182);
		_Wait(2);

		// 初期移動
		let fr=180;
		let x=cenX;
		let y=minY+120+RandBlur(1);
		SetMovePosition02(x,y,fr);
		_Wait(fr);

		let assign=-1;

		loop{

			// 使い魔召喚
			SummonShadow(assign);
			_Wait(60);

			loop(2){

				// 移動
				move(60);
				_Wait(60);

				// 扇状ばらつき弾
				WideVariedShot(assign);
				_Wait(60);

			}

			// 移動
			move(90);
			_Wait(120);

			assign*=-1;

		}

	}

	// 使い魔召喚 --------------------------------------------------------------
	task SummonShadow(let assign){

		let way=4+2*Lv;
		let gapLength=80;
		let wideAngle=160;
		let wayAngle=wideAngle/(way-1)*assign;
		let baseAngle=90-wayAngle*(way-1)/2;
		let fr=5;

		ascent(let i in 0 .. way){
			let angle=baseAngle+wayAngle*i;
			let x=GetGapX(GetX,gapLength,angle);
			let y=GetGapY(GetY,gapLength,angle);
			CreateEnemyFromScript("Shadow",x,y,0,angle,0);
			_Wait(fr);
		}

	}

	// 扇状ばらつき弾 ----------------------------------------------------------
	task WideVariedShot(let assign){

		let way=5+2*Lv;
		let wideAngle=160;
		let wayAngle=-wideAngle/(way-1)*assign;
		let baseAngle=GetAngleToPlayer-wayAngle*(way-1)/2;
		let fr=5;

		ascent(let i in 0 .. way){
			let angle=baseAngle+wayAngle*i;
			VariedShot(angle);
			_Wait(fr);
		}

	}

	// ばらつき弾 --------------------------------------------------------------
	function VariedShot(let baseAngle){

		let num=21;
		let baseSpeed=1;
		let numSpeed=(4.2-baseSpeed)/(num-1);
		let graphic=[RED05,RED01,RED02,RED03];
		let gra=0;
		let delay=15;

		SetShotDirectionType(ABSOLUTE);
		ascent(let i in 0 .. num){
			let speed=baseSpeed+numSpeed*i;
			if(i==7||i==14||i==20){gra++;}
			let angle=baseAngle+RandBlur(4);
			if(i==num-1){angle=baseAngle;}
			CreateShot01(GetX,GetY,speed,angle,graphic[gra],delay);
		}

	}

	// 移動 --------------------------------------------------------------------
	function move(let fr){

		let x=GetX;
		let y=GetY;
		let mx=rand(40,80);
		let my=rand(0,20);
		if(x>=GetPlayerX){
			if(x-mx>=minX+100){mx=-mx;}
		}
		else{
			if(x+mx>=maxX-100){mx=-mx;}
		}
		if(y>=minY+120){my=-my;}
		x+=mx;
		y+=my;
		let power=GetGapLength(GetX,GetY,x,y)*2;
		let angle=GetGapAngle(GetX,GetY,x,y);
		SetMovePositionHermite(x,y,power,angle,0,0,fr);

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// ロードしたファイルを削除
		DeleteGraphic(imgBoss);
		DeleteGraphic(imgShadow);
		DeleteSE(seHidden);
		DeleteSE(seSudden);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// ボス描画
		let x=0;
		let y=0;
		let sLength=128;
		SetAlpha(255);
		SetColor(255,255,255);
		_DrawChrRectSqr(imgBoss,GetX,GetY,x,y,sLength);

	}

}

// 使い魔 ----------------------------------------------------------------------
script_enemy Shadow{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Shadow.dnh"

	// 画像及び効果音ファイル
	let imgShadow=dotCircle6s;
	let seHidden=seShadowHidden;
	let seSudden=seShadowSudden;

	let Lv=GetCommonDataDefault("Level",0);
	let _x=GetX;
	let _y=GetY;

	// -------------------------------------------------------------------------
	@Initialize{

		// ステータス設定（ライフ、ダメージ率等）
		SetLife(200);
		SetDamageRateExDelay(30,100,50,50,50);
		SetX(GetEnemyX);
		SetY(GetEnemyY);

		// 実体化時の光
		LightShadow;

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 画面外で消滅
		GoneEx(40);

		// 当たり判定（自弾,体当たり）
		if(!m_bHidden){Collision(24,18);}

		// 使い魔基本処理
		BehaviorShadow(seHidden,seSudden);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		yield;

		// 移動
		SetColor(255,31,31);
		Concentration01(30);
		let power=GetGapLength(GetX,GetY,_x,_y)*2;
		let angle=GetGapAngle(GetX,GetY,_x,_y);
		SetMovePositionHermite(_x,_y,power,angle,0,0,40);
		_Wait(60);

		// ばらまき弾
		angle=GetAngle;
		if(GetPlayerY<GetY){angle=GetGapAngle(GetX,GetY,GetPlayerX,GetPlayerY);}
		VariedShot(angle);
		_Wait(120);
		angle=GetAngle;
		if(GetPlayerY<GetY){angle=GetGapAngle(GetX,GetY,GetPlayerX,GetPlayerY);}
		VariedShot(angle);
		_Wait(60);

		// 移動
		SetSpeed(2);

	}

	// ばらまき弾 --------------------------------------------------------------
	function VariedShot(let baseAngle){

		let num=21;
		let baseSpeed=1;
		let numSpeed=(4-baseSpeed)/(num-1);
		let graphic=[RED05,RED01,RED02,RED03];
		let gra=0;
		let delay=15;

		SetShotDirectionType(ABSOLUTE);
		ascent(let i in 0 .. num){
			let speed=baseSpeed+numSpeed*i;
			if(i==7||i==15||i==20){gra++;}
			let angle=baseAngle+RandBlur(3.5);
			if(i==num-1){angle=baseAngle;}
			CreateShot01(GetX,GetY,speed,angle,graphic[gra],delay);
		}

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// 弾消し
		DestructShadow(40);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// 本体描画
		let x=64;
		let y=0;
		let sLength=64;
		let angle=2*m_nCount;
		let scale=0.8;
		SetColor(255,255,255);
		DrawShadow(imgShadow,x,y,sLength,angle,scale,scale);

	}

}
