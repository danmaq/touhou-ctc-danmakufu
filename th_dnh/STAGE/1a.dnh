//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇 〜 Concealed the Conclusion
//		STAGE 1a
//
//		※ステージライブラリから自動的にインクルードされます
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メンバ変数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

let m_aszStage1ALoadFileListGraphic = [];
let m_aszStage1ALoadFileListEnemy = [];
let m_aszStage1ALoadFileListSound = [];


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	内部処理
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////
//	初期化
function Stage1AInitialize(){
	SetCommonData("Level",m_nStageLevel);
	SetCommonData("DeleteEnemy",0);
	LoadProgress( m_aszStageDefaultLoadFileListGraphic ~ m_aszStage1ALoadFileListGraphic, m_aszStage1ALoadFileListEnemy, m_aszStageDefaultLoadFileListSE ~ m_aszStage1ALoadFileListSound );
}

//	ここにステージの中身を書く
task Stage1A(){

	_Wait(200);

//---------------------------------------------------------------

	loop(2)
	{
		ascent(i in 0..7)
		{
			CreateEnemyFromFile(z_s_07,Smooth( GetClipMinX()+40,GetClipMaxX()-40,i,7 ),GetClipMinY()-20,0,0,GetCenterX/3);
			_Wait(20);
		}
		_Wait(150);
		ascent(i in 0..7)
		{
			CreateEnemyFromFile(z_s_07,Smooth( GetClipMaxX()-40,GetClipMinX()+40,i,7 ),GetClipMinY()-20,0,0,GetCenterX()+GetCenterX/3*2);
			_Wait(20);
		}
		_Wait(150);
	}

//---------------------------------------------------------------

	CreateEnemyFromFile(z_g_11,GetCenterX(),GetClipMinY()-20,6.5,90,0);

	_Wait(400);

//---------------------------------------------------------------

	loop(5)
	{
		CreateEnemyFromFile(z_g_12,GetCenterX()/3+rand(-20,20),GetClipMinY()-20,5,90,[1,0][rand(0,100)<50]);
		_Wait(70);
		CreateEnemyFromFile(z_g_12,GetCenterX()+GetCenterX()/3*2+rand(-20,20),GetClipMinY()-20,5,90,[1,0][rand(0,100)<50]);
	}

	_Wait(400);

	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",1);


///////////////////////////////////////////////////////////////////////
	if(m_nStageLevel<2){CreateEnemyBossFromFile(bossFlandreE,GetCenterX(),0,0,0,0);}
	if(m_nStageLevel>1){CreateEnemyBossFromFile(bossFlandreH,GetCenterX(),0,0,0,0);}
	WaitForZeroEnemy();//敵が消えるまで停止
///////////////////////////////////////////////////////////////////////

	SetCommonData("DeleteEnemy",0);
	_Wait(200);

	loop(2)
	{
		loop(10)
		{
			CreateEnemyFromFile(z_s_07,rand(GetClipMinX()+30,GetClipMaxX()-30),GetClipMinY()-20,0,0,rand(GetClipMinX()+30,GetClipMaxX()-30));
			_Wait(10);
		}
		_Wait(150);
	}
		_Wait(150);

//---------------------------------------------------------------

	loop(5)
	{
		CreateEnemyFromFile(z_g_12,rand(GetClipMinX()+30,GetClipMaxX()-30),GetClipMinY()-20,5,90,0);
	}
		_Wait(250);

//---------------------------------------------------------------

	loop(5)
	{
		CreateEnemyFromFile(z_g_12,GetCenterX()/3+rand(-20,20),GetClipMinY()-20,5,90,1);
		_Wait(60);
	}
		_Wait(100);
	loop(5)
	{
		CreateEnemyFromFile(z_g_12,GetCenterX()+GetCenterX()/3*2+rand(-20,20),GetClipMinY()-20,5,90,1);
		_Wait(60);
	}


//---------------------------------------------------------------

	CreateEnemyFromFile(z_g_11,GetCenterX()/2,GetClipMinY()-20,6.5,90,0);
	CreateEnemyFromFile(z_g_11,GetCenterX()*1.5,GetClipMinY()-20,6.5,90,0);

	_Wait(650);


	SetCommonData("DeleteEnemy",1);
	yield;
	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",0);


///////////////////////////////////////////////////////////////////////
	CreateEnemyBossFromFile(bossMeirin,GetCenterX(),0,0,0,0);
	WaitForZeroEnemy();//敵が消えるまで停止

//if(条件){
	CreateEnemyBossFromFile(bossMeirinL,GetCenterX(),GetCenterY/2,0,0,0);
	WaitForZeroEnemy();//敵が消えるまで停止
//}

///////////////////////////////////////////////////////////////////////



//ショットキーを押すと次のステージへ////////////////
	while(GetKeyState(VK_SHOT) != KEY_PUSH)
	{
		yield;
	}
////////////////////////////////////////////////////

	Stage2();
}


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メイン部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	@MainLoop()にて毎フレーム呼ばれる部分
function Stage1AMainLoop(){}

//	@BackGround()にて毎回呼ばれる部分
function Stage1ADrawBackGround(){
}

//	@DrawBottomObject()にて毎回呼ばれる部分
function Stage1ADrawBottomObject(){
}

//	@DrawTopObject()にて毎回呼ばれる部分
function Stage1ADrawTopObject(){
}
