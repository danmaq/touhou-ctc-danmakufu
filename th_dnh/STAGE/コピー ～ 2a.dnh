//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇 〜 Concealed the Conclusion
//		STAGE 2a
//
//		※ステージライブラリから自動的にインクルードされます
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メンバ変数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

let m_aszStage2ALoadFileListGraphic = [];
let m_aszStage2ALoadFileListEnemy = [];
let m_aszStage2ALoadFileListSound = [];


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	内部処理
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	初期化
function Stage2AInitialize(){
	SetCommonData("Level",m_nStageLevel);
	SetCommonData("DeleteEnemy",0);
	LoadProgress( m_aszStageDefaultLoadFileListGraphic ~ m_aszStage2ALoadFileListGraphic, m_aszStage2ALoadFileListEnemy, m_aszStageDefaultLoadFileListSE ~ m_aszStage2ALoadFileListSound );
}

//	ここにステージの中身を書く
task Stage2A(){

	_Wait(100);
//part01---------------------------------------------------------------
	loop(8)
	{
		CreateEnemyFromFile(z03_01,rand(GetClipMinX()+50,GetCenterX()-30),rand(GetClipMinY()+50,GetCenterY()-40),0,0,0);
		_Wait(4);
	}
	_Wait(200);
	

	loop(8)
	{
		CreateEnemyFromFile(z03_01,rand(GetCenterX()+30,GetClipMaxX()-50),rand(GetClipMinY()+50,GetCenterY()-40),0,0,0);
		_Wait(4);
	}

	_Wait(300);
//part02---------------------------------------------------------------
	let i=0;
	loop(12)
	{
		CreateEnemyFromFile(z03_04,GetClipMinX()-20,Smooth(GetClipMinY(),GetCenterY()-40,i,11),0,0,0);
		_Wait(15);
		i++;
	}
	
	_Wait(200);
	
	let i=0;
	loop(12)
	{
		CreateEnemyFromFile(z03_04,GetClipMaxX()+20,Smooth(GetClipMinY(),GetCenterY()-40,i,11),0,0,0);
		_Wait(15);
		i++;
	}

	_Wait(300);

//part03---------------------------------------------------------------

	loop(8)
	{
		CreateEnemyFromFile(z03_01,rand(GetClipMinX()+50,GetCenterX()-30),rand(GetClipMinY()+50,GetCenterY()-40),0,0,0);
		_Wait(4);
	}
	let i=0;
	loop(12)
	{
		CreateEnemyFromFile(z03_04,GetClipMaxX()+20,Smooth(GetClipMinY(),GetCenterY()-40,i,11),0,0,0);
		_Wait(15);
		i++;
	}

	_Wait(200);

	loop(8)
	{
		CreateEnemyFromFile(z03_01,rand(GetCenterX()+30,GetClipMaxX()-50),rand(GetClipMinY()+50,GetCenterY()-40),0,0,0);
		_Wait(4);
	}
	let i=0;
	loop(12)
	{
		CreateEnemyFromFile(z03_04,GetClipMinX()-20,Smooth(GetClipMinY(),GetCenterY()-40,i,11),0,0,0);
		_Wait(15);
		i++;
	}

	_Wait(300);

//part04---------------------------------------------------------------

	loop(2)
	{
		loop(12)
		{
			CreateEnemyFromFile(z03_01,rand(GetClipMinX()+30,GetClipMaxX()-30),rand(GetClipMinY()+50,GetCenterY()-40),0,0,0);
			_Wait(3);
		}
		_Wait(200);
	}
	_Wait(200);

//part04---------------------------------------------------------------

	CreateEnemyFromFile(z03_02,GetCenterX()/2,GetClipMinY()-20,5,90,0);
	_Wait(300);
	CreateEnemyFromFile(z03_02,GetCenterX()*1.5,GetClipMinY()-20,5,90,1);
	_Wait(450);
	CreateEnemyFromFile(z03_02,GetCenterX()/2,GetClipMinY()-20,5,90,0);
	CreateEnemyFromFile(z03_02,GetCenterX()*1.5,GetClipMinY()-20,5,90,1);

	_Wait(300);
	SetCommonData("DeleteEnemy",1);
	_Wait(30);
	DeleteEnemyShotToItem(ALL);

///////////////////////////////////////////////////////////////////////
//ここに中ボスが入る
	_Wait(100);
///////////////////////////////////////////////////////////////////////



	SetCommonData("DeleteEnemy",0);
	_Wait(200);

//part06---------------------------------------------------------------


	loop(12)
	{
		CreateEnemyFromFile(z03_01,rand(GetClipMinX()+30,GetClipMaxX()-30),rand(GetClipMinY()+50,GetCenterY()-40),0,0,0);
		_Wait(3);
	}
	loop(12)
	{
		CreateEnemyFromFile(z03_04,GetClipMaxX()+20,Smooth(GetClipMinY(),GetCenterY()-40,i,11),0,0,0);
		CreateEnemyFromFile(z03_04,GetClipMinX()-20,Smooth(GetClipMinY(),GetCenterY()-40,i,11),0,0,0);
		_Wait(20);
		i++;
	}

	_Wait(300);

//part07---------------------------------------------------------------

	loop(2)
	{
		CreateEnemyFromFile(z03_03,GetCenterX()/2,GetClipMinY()-20,5,90,0);
		_Wait(200);
		CreateEnemyFromFile(z03_03,GetCenterX()*1.5,GetClipMinY()-20,5,90,0);
		_Wait(200);
	}
	_Wait(200);

//part08---------------------------------------------------------------

	loop(4)
	{
		loop(3)
		{
			CreateEnemyFromFile(z03_01,rand(GetClipMinX()+30,GetClipMaxX()-30),rand(GetClipMinY()+50,GetCenterY()-40),0,0,0);
		}
		_Wait(80);
	}
	_Wait(200);

//part09---------------------------------------------------------------

	CreateEnemyFromFile(z03_03,GetCenterX()-30,GetClipMinY()-20,4.5,90,0);
	CreateEnemyFromFile(z03_03,GetCenterX()+30,GetClipMinY()-20,4.5,90,0);
	CreateEnemyFromFile(z03_02,GetCenterX(),GetClipMinY()-20,5,90,3);

	_Wait(350);

	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",1);
	_Wait(10);
	SetCommonData("DeleteEnemy",0);


///////////////////////////////////////////////////////////////////////
//ここにボスが入る
	_Wait(100);
///////////////////////////////////////////////////////////////////////



//ショットキーを押すと次のステージへ////////////////
	while(GetKeyState(VK_SHOT) != KEY_PUSH)
	{
		yield;
	}
////////////////////////////////////////////////////



	Stage3();
}


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メイン部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	@MainLoop()にて毎フレーム呼ばれる部分
function Stage2AMainLoop(){
}

//	@BackGround()にて毎回呼ばれる部分
function Stage2ADrawBackGround(){
}

//	@DrawBottomObject()にて毎回呼ばれる部分
function Stage2ADrawBottomObject(){
}

//	@DrawTopObject()にて毎回呼ばれる部分
function Stage2ADrawTopObject(){
}
