//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇 〜 Concealed the Conclusion
//		STAGE 1c
//
//		※ステージライブラリから自動的にインクルードされます
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メンバ変数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

let m_aszStage1CLoadFileListGraphic = [];
let m_aszStage1CLoadFileListEnemy = [];
let m_aszStage1CLoadFileListSound = [];


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	内部処理
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	初期化
function Stage1CInitialize(){
	SetCommonData("Level",m_nStageLevel);
	SetCommonData("DeleteEnemy",0);
	LoadProgress( m_aszStageDefaultLoadFileListGraphic ~ m_aszStage1CLoadFileListGraphic, m_aszStage1CLoadFileListEnemy, m_aszStageDefaultLoadFileListSE ~ m_aszStage1CLoadFileListSound );
}

//	ここにステージの中身を書く
task Stage1C(){

	_Wait(200);

//---------------------------------------------------------------

	loop(2)
	{
		loop(8)
		{
			CreateEnemyFromFile(z_g_04,GetCenterX()*1.5+rand(-50,+50),GetClipMinY()-20,rand(1.8,4.5),90+rand(0,30),0);
			_Wait(16);
		}
		_Wait(100);
	}

	_Wait(150);

	loop(2)
	{
		loop(8)
		{
			CreateEnemyFromFile(z_g_04,GetCenterX()/2+rand(-50,+50),GetClipMinY()-20,rand(1.8,4.5),90+rand(-30,0),0);
			_Wait(16);
		}
		_Wait(100);
	}


//---------------------------------------------------------------

	CreateEnemyFromFile(z_m_07,GetCenterX()*1.5,GetClipMinY()-20,5,90,13);
	_Wait(250);
	CreateEnemyFromFile(z_m_09,GetCenterX()/2,GetClipMinY()-20,6,90,3);
	_Wait(400);

	CreateEnemyFromFile(z_m_09,GetCenterX()*1.5,GetClipMinY()-20,6,90,3);
	_Wait(250);
	CreateEnemyFromFile(z_m_07,GetCenterX()/2,GetClipMinY()-20,5,90,13);
	_Wait(400);

//---------------------------------------------------------------

	loop(5)
	{
		CreateEnemyFromFile(z_g_20,GetCenterX()*1.5+rand(-50,+50),GetClipMinY()-20,rand(2,4),90+rand(0,30),0);
	}
	_Wait(100);

	loop(5)
	{
		CreateEnemyFromFile(z_g_20,GetCenterX()/2+rand(-50,+50),GetClipMinY()-20,rand(2,4),90-rand(0,30),0);
	}
	_Wait(300);

//---------------------------------------------------------------

	loop(8)
	{
		CreateEnemyFromFile(z_g_04,GetCenterX()*1.5+rand(-50,+50),GetClipMinY()-20,rand(2,5),90+rand(0,30),0);
		_Wait(16);
	}

	_Wait(100);

	loop(8)
	{
		CreateEnemyFromFile(z_g_04,GetCenterX()/2+rand(-50,+50),GetClipMinY()-20,rand(2,5),90+rand(-30,0),0);
		_Wait(16);
	}

	_Wait(300);

//---------------------------------------------------------------

	CreateEnemyFromFile(z_m_07,GetCenterX()*1.5,GetClipMinY()-20,5,90,13);
	CreateEnemyFromFile(z_m_07,GetCenterX()/2,GetClipMinY()-20,5,90,13);

	loop(20)
	{
		CreateEnemyFromFile(z_g_20,GetCenterX()+rand(-150,+150),GetClipMinY()-20,rand(2,4),90+rand(-10,10),0);
		_Wait(20);
	}


	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",1);


///////////////////////////////////////////////////////////////////////
	if(m_nStageLevel<2){CreateEnemyBossFromFile(bossLilyE,GetCenterX(),0,0,0,0);}
	if(m_nStageLevel>1){CreateEnemyBossFromFile(bossLilyH,GetCenterX(),0,0,0,0);}
	WaitForZeroEnemy();//敵が消えるまで停止
///////////////////////////////////////////////////////////////////////

	SetCommonData("DeleteEnemy",0);
	_Wait(100);

//---------------------------------------------------------------

	loop(8)
	{
		CreateEnemyFromFile(z_g_04,GetCenterX()*1.5+rand(-50,+50),GetClipMinY()-20,rand(2,5),90+rand(0,30),0);
		CreateEnemyFromFile(z_g_04,GetCenterX()/2+rand(-50,+50),GetClipMinY()-20,rand(2,5),90+rand(-30,0),0);
		_Wait(16);
	}

	_Wait(300);

//---------------------------------------------------------------

	loop(2)
	{
		CreateEnemyFromFile(z_m_07,GetCenterX()*1.5,GetClipMinY()-20,5,90,11);
	
		ascent(i in 0..10)
		{
			CreateEnemyFromFile(z_g_20,Smooth(GetClipMinX()+20,GetClipMaxX()-20,i,10),GetClipMinY()-20,5,90,0);
			_Wait(30);
		}
	
		CreateEnemyFromFile(z_m_07,GetCenterX()/2,GetClipMinY()-20,5,90,10);
	
		ascent(i in 0..10)
		{
			CreateEnemyFromFile(z_g_20,Smooth(GetClipMaxX()-20,GetClipMinX()+20,i,10),GetClipMinY()-20,5,90,0);
			_Wait(30);
		}
	}

	_Wait(450);

//----------------------------------------------------------------

	CreateEnemyFromFile(z_m_09,GetCenterX()/2,GetClipMinY()-20,5,90,0);
	CreateEnemyFromFile(z_m_09,GetCenterX()*1.5,GetClipMinY()-20,5,90,1);

	_Wait(350);



	SetCommonData("DeleteEnemy",1);
	yield;
	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",0);


///////////////////////////////////////////////////////////////////////
	CreateEnemyBossFromFile(bossMedicine,GetCenterX(),0,0,0,0);
	WaitForZeroEnemy();//敵が消えるまで停止

//if(条件){
	CreateEnemyBossFromFile(bossMedicineL,GetCenterX(),GetCenterY/2,0,0,0);
	WaitForZeroEnemy();//敵が消えるまで停止
//}

///////////////////////////////////////////////////////////////////////


//ショットキーを押すと次のステージへ////////////////
	while(GetKeyState(VK_SHOT) != KEY_PUSH)
	{
		yield;
	}
////////////////////////////////////////////////////

	Stage2();
}


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メイン部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	@MainLoop()にて毎フレーム呼ばれる部分
function Stage1CMainLoop(){
}

//	@BackGround()にて毎回呼ばれる部分
function Stage1CDrawBackGround(){
}

//	@DrawBottomObject()にて毎回呼ばれる部分
function Stage1CDrawBottomObject(){
}

//	@DrawTopObject()にて毎回呼ばれる部分
function Stage1CDrawTopObject(){
}
