//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇 〜 Concealed the Conclusion
//		STAGE 1b
//
//		※ステージライブラリから自動的にインクルードされます
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メンバ変数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

let m_aszStage1BLoadFileListGraphic = [];
let m_aszStage1BLoadFileListEnemy = [];
let m_aszStage1BLoadFileListSound = [];


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	内部処理
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	初期化
function Stage1BInitialize(){
	SetCommonData("Level",m_nStageLevel);
	SetCommonData("DeleteEnemy",0);
	LoadProgress( m_aszStageDefaultLoadFileListGraphic ~ m_aszStage1BLoadFileListGraphic, m_aszStage1BLoadFileListEnemy, m_aszStageDefaultLoadFileListSE ~ m_aszStage1BLoadFileListSound );
}

//	ここにステージの中身を書く
task Stage1B(){

	_Wait(200);

//part01---------------------------------------------------------------

	let i=0;
	loop(10)
	{
		CreateEnemyFromFile(z01_01,Smooth(GetCenterX()+10,GetClipMaxX()-30,i,10),GetClipMinY()-20,Smooth(4,10,i,10),90,1);
		CreateEnemyFromFile(z01_01,Smooth(GetCenterX()-10,GetClipMinX()+30,i,10),GetClipMinY()-20,Smooth(4,10,i,10),90,1);
		i++;
	}

	_Wait(100);

	let i=0;
	loop(10)
	{
		CreateEnemyFromFile(z01_01,Smooth(GetCenterX()+10,GetClipMaxX()-30,i,10),GetClipMinY()-20,Smooth(10,4,i,10),90,1);
		CreateEnemyFromFile(z01_01,Smooth(GetCenterX()-10,GetClipMinX()+30,i,10),GetClipMinY()-20,Smooth(10,4,i,10),90,1);
		i++;
	}

	_Wait(200);

//part02---------------------------------------------------------------

	loop(2)
	{
		CreateEnemyFromFile(z01_02,GetClipMinX(),GetClipMinY(),10,35,0);
		loop(6)
		{
			CreateEnemyFromFile(z01_01,GetCenterX(),GetClipMinY(),rand(5,8),rand(20,160),1);
			_Wait(20);
		}
		_Wait(30);
		CreateEnemyFromFile(z01_02,GetClipMaxX(),GetClipMinY(),10,145,0);
		loop(6)
		{
			CreateEnemyFromFile(z01_03,GetCenterX(),GetClipMinY(),rand(1.5,2.5),rand(20,160),1);
			_Wait(20);
		}
		_Wait(30);
	}

	_Wait(300);

//part03---------------------------------------------------------------

	let i=0;
	loop(10)
	{
		CreateEnemyFromFile(z01_03,GetClipMinX()-30,Smooth(GetCenterY(),GetClipMinY()+30,i,10),3,0,0);
		CreateEnemyFromFile(z01_03,GetClipMaxX()+30,Smooth(GetCenterY(),GetClipMinY()+30,i,10),3,180,0);
		i++;
		_Wait(15);
	}

	_Wait(200);
	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",1);


///////////////////////////////////////////////////////////////////////
//ここに中ボスが入る
	_Wait(100);
///////////////////////////////////////////////////////////////////////

	SetCommonData("DeleteEnemy",0);


//part04---------------------------------------------------------------

	_Wait(300);

	CreateEnemyFromFile(z01_04,GetClipMinX()-20,GetCenterY()/2,6,0,0);
	let i=0;
	loop(10)
	{
		CreateEnemyFromFile(z01_01,GetClipMaxX()-30,GetClipMinY()-20,Smooth(5,12,i,10),90,1);
		_Wait(20);
		i++;
	}

	_Wait(150);

	CreateEnemyFromFile(z01_04,GetClipMaxX()+20,GetCenterY()/2,6,180,0);
	let i=0;
	loop(10)
	{
		CreateEnemyFromFile(z01_01,GetClipMinX()+30,GetClipMinY()-20,Smooth(5,12,i,10),90,1);
		_Wait(20);
		i++;
	}

	_Wait(300);

//part05---------------------------------------------------------------

	let n=0;
	loop(4)
	{
		CreateEnemyFromFile(z01_02,Smooth(GetClipMinX()+30,GetClipMaxX()-30,n,4),GetClipMinY()-20,6,90,0);
		_Wait(60);
		let i=0;
		loop(8)
		{
			CreateEnemyFromFile(z01_03,Smooth(GetClipMinX()+50,GetClipMaxX()-50,i,8),GetClipMinY()-20,1.5,90,0);
			i++;
		}
		_Wait(100);
		n++;
	}


	_Wait(200);

	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",1);
	_Wait(10);
	SetCommonData("DeleteEnemy",0);


///////////////////////////////////////////////////////////////////////
//ここにボスが入る
	_Wait(100);
///////////////////////////////////////////////////////////////////////



//ショットキーを押すと次のステージへ////////////////
	while(GetKeyState(VK_SHOT) != KEY_PUSH)
	{
		yield;
	}
////////////////////////////////////////////////////


	Stage2();
}


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メイン部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	@MainLoop()にて毎フレーム呼ばれる部分
function Stage1BMainLoop(){
}

//	@BackGround()にて毎回呼ばれる部分
function Stage1BDrawBackGround(){
}

//	@DrawBottomObject()にて毎回呼ばれる部分
function Stage1BDrawBottomObject(){
}

//	@DrawTopObject()にて毎回呼ばれる部分
function Stage1BDrawTopObject(){
}
