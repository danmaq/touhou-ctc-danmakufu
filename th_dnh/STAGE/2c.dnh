//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇 〜 Concealed the Conclusion
//		STAGE 2c
//
//		※ステージライブラリから自動的にインクルードされます
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メンバ変数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

let m_aszStage2CLoadFileListGraphic = [];
let m_aszStage2CLoadFileListEnemy = [];
let m_aszStage2CLoadFileListSound = [];


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	内部処理
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	初期化
function Stage2CInitialize(){
	LoadProgress( m_aszStageDefaultLoadFileListGraphic ~ m_aszStage2CLoadFileListGraphic, m_aszStage2CLoadFileListEnemy, m_aszStageDefaultLoadFileListSE ~ m_aszStage2CLoadFileListSound );
	SetCommonData("Level",m_nStageLevel);
	SetCommonData("DeleteEnemy",0);
}

//	ここにステージの中身を書く
task Stage2C(){

	_Wait(100);

	loop(2)
	{
		loop(4)
		{
			CreateEnemyFromFile(z_g_14,GetCenterX*1.5+rand(-60,60),GetClipMinY()-20,rand(3,7),rand(-10,+10)+100,0);
			_Wait(25);
		}
		_Wait(150);
		loop(4)
		{
			CreateEnemyFromFile(z_g_14,GetCenterX/2+rand(-60,60),GetClipMinY()-20,rand(3,7),rand(-10,+10)+80,0);
			_Wait(25);
		}
		_Wait(150);
	}

//---------------------------------------------------------------

	loop(8)
	{
		CreateEnemyFromFile(z_s_08,GetCenterX/2,GetClipMinY()-20,0,0,0);
		_Wait(15);
	}
	_Wait(150);
	loop(8)
	{
		CreateEnemyFromFile(z_s_08,GetCenterX*1.5,GetClipMinY()-20,0,0,0);
		_Wait(15);
	}


	_Wait(200);

//---------------------------------------------------------------

	loop(2)
	{
		loop(4)
		{
			CreateEnemyFromFile(z_g_13,rand(GetClipMinX()+30,GetClipMaxX()-30),GetClipMinY()-20,rand(3,9),rand(-10,+10)+90,0);
		}
		_Wait(200);
	}

	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",1);

///////////////////////////////////////////////////////////////////////
//ここに中ボスが入る
	_Wait(100);
///////////////////////////////////////////////////////////////////////

	SetCommonData("DeleteEnemy",0);
	_Wait(200);

	loop(3)
	{
		CreateEnemyFromFile(z_g_15,GetCenterX*1.5+rand(-60,60),GetClipMinY()-20,rand(3,7),rand(-10,+10)+100,0);
		_Wait(25);
	}
	_Wait(150);
	loop(3)
	{
		CreateEnemyFromFile(z_g_15,GetCenterX/2+rand(-60,60),GetClipMinY()-20,rand(3,7),rand(-10,+10)+80,0);
		_Wait(25);
	}
	_Wait(250);

//---------------------------------------------------------------

	loop(4)
	{
		CreateEnemyFromFile(z_g_14,GetCenterX*1.5+rand(-60,60),GetClipMinY()-20,rand(3,7),rand(-10,+10)+100,0);
		_Wait(25);
	}
	loop(4)
	{
		CreateEnemyFromFile(z_g_13,rand(GetClipMinX()+30,GetClipMaxX()-30),GetClipMinY()-20,rand(3,9),rand(-10,+10)+90,0);
	}
	_Wait(100);
	loop(4)
	{
		CreateEnemyFromFile(z_g_14,GetCenterX/2+rand(-60,60),GetClipMinY()-20,rand(3,7),rand(-10,+10)+80,0);
		_Wait(25);
	}
	loop(4)
	{
		CreateEnemyFromFile(z_g_13,rand(GetClipMinX()+30,GetClipMaxX()-30),GetClipMinY()-20,rand(3,9),rand(-10,+10)+90,0);
	}
	_Wait(250);

//---------------------------------------------------------------

	loop(4)
	{

		loop(2)
		{
			CreateEnemyFromFile(z_g_13,rand(GetClipMinX()+30,GetClipMaxX()-30),GetClipMinY()-20,rand(3,9),rand(-10,+10)+90,0);
		}
		loop(3)
		{
			CreateEnemyFromFile(z_g_15,rand(GetClipMinX()+30,GetClipMaxX()-30),GetClipMinY()-20,rand(3,7),rand(-10,+10)+100,0);
			_Wait(25);
		}
		_Wait(70);
	}

//---------------------------------------------------------------

	loop(25)
	{
		CreateEnemyFromFile(z_s_08,rand(GetClipMinX()+30,GetClipMaxX()-30),GetClipMinY()-20,0,0,0);
		_Wait(20);
	}
	_Wait(200);


	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",1);
	_Wait(10);
	SetCommonData("DeleteEnemy",0);


///////////////////////////////////////////////////////////////////////
//ここにボスが入る
	_Wait(100);
///////////////////////////////////////////////////////////////////////



//ショットキーを押すと次のステージへ////////////////
	while(GetKeyState(VK_SHOT) != KEY_PUSH)
	{
		yield;
	}
////////////////////////////////////////////////////


	Stage3();
}


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メイン部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	@MainLoop()にて毎フレーム呼ばれる部分
function Stage2CMainLoop(){
}

//	@BackGround()にて毎回呼ばれる部分
function Stage2CDrawBackGround(){
}

//	@DrawBottomObject()にて毎回呼ばれる部分
function Stage2CDrawBottomObject(){
}

//	@DrawTopObject()にて毎回呼ばれる部分
function Stage2CDrawTopObject(){
}
