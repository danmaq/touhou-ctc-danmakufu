//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇 〜 Concealed the Conclusion
//		STAGE 3a
//
//		※ステージライブラリから自動的にインクルードされます
//
//====================================================================
//////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メンバ変数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

let m_aszStage3ALoadFileListGraphic = [];
let m_aszStage3ALoadFileListEnemy = [];
let m_aszStage3ALoadFileListSound = [];


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	内部処理
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	初期化
function Stage3AInitialize(){
	SetCommonData("Level",m_nStageLevel);
	SetCommonData("DeleteEnemy",0);
	LoadProgress( m_aszStageDefaultLoadFileListGraphic ~ m_aszStage3ALoadFileListGraphic, m_aszStage3ALoadFileListEnemy, m_aszStageDefaultLoadFileListSE ~ m_aszStage3ALoadFileListSound );
}

//	ここにステージの中身を書く
task Stage3A(){

	_Wait(100);

//---------------------------------------------------------------

	loop(3)
	{
		loop(2)
		{
			CreateEnemyFromFile(z_g_16,GetClipMaxX()+20,GetCenterY()/3+rand(-10,10),rand(2,10),180,0);
			CreateEnemyFromFile(z_g_16,GetClipMinX()-20,GetCenterY()/3+rand(-10,10),rand(2,10),0,0);
		}
		_Wait(230);
	}
	_Wait(100);

//---------------------------------------------------------------

	CreateEnemyFromFile(z_m_12,GetCenterX(),GetClipMinY()-20,4,90,3);

	_Wait(350);

//---------------------------------------------------------------

	loop(2)
	{
		loop(4)
		{
			CreateEnemyFromFile(z_g_17,GetCenterX*1.5+rand(-60,60),GetClipMinY()-20,rand(3,7),rand(-10,+10)+100,0);
			_Wait(25);
		}
		_Wait(150);
		loop(4)
		{
			CreateEnemyFromFile(z_g_17,GetCenterX/2+rand(-60,60),GetClipMinY()-20,rand(3,7),rand(-10,+10)+80,0);
			_Wait(25);
		}
		_Wait(150);
	}

//---------------------------------------------------------------

	CreateEnemyFromFile(z_g_18,GetCenterX(),GetClipMinY()-20,3.5,90,3);

	_Wait(550);

	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",1);


///////////////////////////////////////////////////////////////////////
//ここに中ボスが入る
	_Wait(100);
///////////////////////////////////////////////////////////////////////

	SetCommonData("DeleteEnemy",0);
	_Wait(200);

	CreateEnemyFromFile(z_g_16,GetCenterX,GetClipMinY()-20,3,90,0);
	CreateEnemyFromFile(z_g_16,GetCenterX/2,GetClipMinY()-20,3,90,0);
	CreateEnemyFromFile(z_g_16,GetCenterX*1.5,GetClipMinY()-20,3,90,0);
	_Wait(150);

	let i=0;
	loop(5)
	{
		CreateEnemyFromFile(z_g_17,Smooth(GetClipMinX()+20,GetClipMaxX()-20,i,5),GetClipMinY()-20,2,90,0);
		_Wait(14);
		i++;
	}

	CreateEnemyFromFile(z_g_16,GetCenterX,GetClipMinY()-20,3,90,0);
	CreateEnemyFromFile(z_g_16,GetCenterX/2,GetClipMinY()-20,3,90,0);
	CreateEnemyFromFile(z_g_16,GetCenterX*1.5,GetClipMinY()-20,3,90,0);
	_Wait(150);

	let i=0;
	loop(5)
	{
		CreateEnemyFromFile(z_g_17,Smooth(GetClipMaxX()-20,GetClipMinX()+20,i,5),GetClipMinY()-20,2,90,0);
		_Wait(14);
		i++;
	}
	_Wait(250);

//---------------------------------------------------------------

	CreateEnemyFromFile(z_m_12,GetCenterX(),GetClipMinY()-20,4,90,3);

	_Wait(250);

	CreateEnemyFromFile(z_g_18,GetCenterX()/2,GetClipMinY()-20,3,90,3);
	CreateEnemyFromFile(z_g_18,GetCenterX()*1.5,GetClipMinY()-20,3,90,3);

	_Wait(400);

//---------------------------------------------------------------

	let i=0;
	loop(5)
	{
		CreateEnemyFromFile(z_g_17,Smooth(GetClipMaxX()-20,GetClipMinX()+20,i,5),GetClipMinY()-20,2,90,0);
		i++;
	}

	_Wait(350);

	SetCommonData("DeleteEnemy",1);
	yield;
	DeleteEnemyShotToItem(ALL);
	SetCommonData("DeleteEnemy",0);


///////////////////////////////////////////////////////////////////////
//ここにボスが入る
	_Wait(100);
///////////////////////////////////////////////////////////////////////



//ショットキーを押すと次のステージへ////////////////
	while(GetKeyState(VK_SHOT) != KEY_PUSH)
	{
		yield;
	}
////////////////////////////////////////////////////


	Stage4();
}


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メイン部
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	@MainLoop()にて毎フレーム呼ばれる部分
function Stage3AMainLoop(){
}

//	@BackGround()にて毎回呼ばれる部分
function Stage3ADrawBackGround(){
}

//	@DrawBottomObject()にて毎回呼ばれる部分
function Stage3ADrawBottomObject(){
}

//	@DrawTopObject()にて毎回呼ばれる部分
function Stage3ADrawTopObject(){
}
