script_enemy_main
{

#include_function ".\INCLUDE\Enemy.dnh"

//変数宣言--------------------------------------
	let count=0;
	let Level=GetCommonData("Level");
//タスクの作成----------------------------------
task MainAction()
{
	yield;
	_Wait(100);
	
	loop([3,6,10,15][Level])
	{
		CreateEnemyFromScript("t_ma_01",GetX(),GetY(),[1.7,2.4,3.3,4][Level],rand(0,360),0);
	}
	_Wait(100);
	if(Level != 0)
	{
		let i=0;
		loop([0,7,12,20][Level])
		{
			CreateShot01(GetX(),GetY(),1+i/5,GetAngleToPlayer(),ORANGE02,20);
			loop(2){yield;}
			i++;
		}
	}

}
task SubAction01()
{
	yield;
	let spmax=GetSpeed();
	let i=0;
	loop(100)
	{
		SetSpeed(SlowDown( spmax , 0 , i , 100 ));
		i++;
		yield;
	}
	_Wait(350);
	VanishEnemy();

}

//実行部分---------------------------------------

	@Initialize
	{
		SetLife(150);
		SetInvincibility( 200 );
		MainAction();
		SubAction01();
	}
	
	@MainLoop
	{
		Gone();
		Deletemine();
		yield;
		Collision(16 , 12);
		count++;
		//敵画像代わり------------------------------------
		if(int(count/2)==count/2)
		{
			CreateShotA(0,GetX(),GetY(),0);
			SetShotDataA(0,0,0,GetAngle(),0,0,0,RED22);
			SetShotKillTime(0,2);
			FireShot(0);
		}
		//------------------------------------------------

	}
	@DrawLoop
	{
	}
	@Finalize
	{
		DropItem( 2 , 20 );
	}
}

////////////////////////////////////////////////////////////////////////
//仮の使い魔、使い魔の書式の統一が必要なので雛形の作成をお願いします
////////////////////////////////////////////////////////////////////////

script_enemy t_ma_01
{

#include_function ".\INCLUDE\Shadow.dnh"

	let count=0;
	let Level=GetCommonData("Level");
	let han=0;
	let spmax=GetSpeed();

task MainAction()
{
	yield;
	if(han != 3)
	{
		if(GetX()<=GetClipMinX()+5)
		{
			SetAngle(180-GetAngle());
			han++;
			CreateLaser01(GetX(),GetY(),GetSpeed(),GetAngle(),[80,120,200,300][Level],7,GREEN21,0);
		}
		if(GetX()>=GetClipMaxX()-5)
		{
			SetAngle(180-GetAngle());
			han++;
			CreateLaser01(GetX(),GetY(),GetSpeed(),GetAngle(),[80,120,200,300][Level],7,GREEN21,0);
		}
		if(GetY()<=GetClipMinY()+5)
		{
			SetAngle(-GetAngle());
			han++;
			CreateLaser01(GetX(),GetY(),GetSpeed(),GetAngle(),[80,120,200,300][Level],7,GREEN21,0);
		}
	}
}

task SubAction()
{
	yield;
	CreateLaser01(GetX(),GetY(),GetSpeed(),GetAngle(),[80,120,200,300][Level],7,GREEN21,0);
	let i=0;
	loop(60)
	{
		SetSpeed(SlowDown( spmax , spmax/3*2 , i , 150 ));
		i++;
		yield;
	}

}

	@Initialize
	{	
		SetLife(80);
		Gone();
		LoadGraphic(imgcircle_t);
		SubAction();
	}
	@MainLoop
	{
		yield;
		Deletemine();
		BehaviorShadow( 0,0 );
		count++;
		MainAction();

		if(GetKeyState(VK_SLOWMOVE)==KEY_FREE)
		{
			Collision( 16,0 );
			if(int(count/3)==count/3)
			{
				CreateShotA(0,GetX(),GetY(),15);
				SetShotDataA(0,0,0,0,0,0,0,WHITE05);
				SetShotKillTime(0,0);
				FireShot(0);
			}
		}
	}
	@DrawLoop
	{
		SetGraphicRect( 0,0,50,50 );
		DrawRotate( imgcircle_t, count*2 );
	}
	@Finalize{
			DestructShadow( 40 );
			if(BeParentVanished() || BeVanished()){DeleteEnemyShot(CHILD);}
			else{DeleteEnemyShotToItem(CHILD);}
		}
}
