#東方弾幕風
#Title[Meirin - 通常攻撃2]
#Text[ステージ1A ボス
紅 美鈴

下記以外のスタート＝Easy
スキップ＋スタート＝Normal
ユーザー＋スタート＝Hard
ｽｷｯﾌﾟ＋ﾕｰｻﾞｰ＋ｽﾀｰﾄ＝Lunatic]
#Image[]
#BackGround[Default]
#Player[FREE]
#ScriptVersion[2]

script_enemy_main{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Enemy.dnh"

	// 画像及び効果音ファイル
	let imgBoss=dotBossMeirin;
	let imgShadow=dotCircle6s;
	let seHidden=seShadowHidden;
	let seSudden=seShadowSudden;

	// 難易度
	Debug_SetLevel;
	let Lv=GetCommonDataDefault("Level",0);

	// -------------------------------------------------------------------------
	@Initialize{

		// 画像及び効果音をロード
		LoadGraphic(imgBoss);
		LoadGraphic(imgShadow);
		LoadSE(seHidden);
		LoadSE(seSudden);

		// スペルカード設定（カード名、スコア、制限時間、弾削除範囲等）
		SetTimer(37);
		SetShotAutoDeleteClip(20,20,20,20);
		SetEnemyMarker(true);

		// ボスステータス設定（ライフ、ダメージ率等）
		SetLife(2500);
		SetDamageRate(80,40);

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 当たり判定（自弾,体当たり）
		Collision(32,24);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		SetInvincibility(182);
		_Wait(2);

		// 初期移動
		let fr=180;
		let x=cenX;
		let y=minY+120+RandBlur(1);
		SetMovePosition02(x,y,fr);
		_Wait(fr);

		loop{

			// 使い魔召喚
			Concentration01(30);
			_Wait(30);
			SummonShadow;
			_Wait(120);

			// 移動＋全方向弾1
			let num=[2,3,4,6];
			let fr1=[150,100,75,50];
			let fr2=[30,20,15,10];

			loop(num[Lv]){
				move(fr1[Lv]);
				_Wait(fr1[Lv]);
				RoundShot1;
				_Wait(fr2[Lv]);
			}

		}

	}

	// 使い魔召喚 --------------------------------------------------------------
	task SummonShadow{

		let num=4;
		ascent(let i in 0 .. num){
			CreateEnemyFromScript("Shadow",GetX,GetY,0,0,i);
		}

	}

	// 全方向弾1 ---------------------------------------------------------------
	task RoundShot1{

		let speed=1.2;
		let angle=rand(0,360);
		let way=[60,70,90,100];
		let graphic=RED04;
		let delay=5;

		SetShotDirectionType(ABSOLUTE);
		RoundShot01(GetX,GetY,speed,angle,way[Lv],graphic,delay);

	}

	// 移動 --------------------------------------------------------------------
	function move(let fr){

		let x=GetX;
		let y=GetY;
		let mx=rand(60,120);
		let my=rand(10,40);
		if(x>=GetPlayerX){
			if(x-mx>=minX+80){mx=-mx;}
		}
		else{
			if(x+mx>=maxX-80){mx=-mx;}
		}
		if(y>=minY+120){my=-my;}
		x+=mx;
		y+=my;
		let power=GetGapLength(GetX,GetY,x,y)*2;
		let angle=GetGapAngle(GetX,GetY,x,y);
		SetMovePositionHermite(x,y,power,angle,0,0,fr);

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// ロードしたファイルを削除
		DeleteGraphic(imgBoss);
		DeleteGraphic(imgShadow);
		DeleteSE(seHidden);
		DeleteSE(seSudden);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// ボス描画
		let x=0;
		let y=0;
		let sLength=128;
		SetAlpha(255);
		SetColor(255,255,255);
		_DrawChrRectSqr(imgBoss,GetX,GetY,x,y,sLength);

	}

}

// 使い魔 ----------------------------------------------------------------------
script_enemy Shadow{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Shadow.dnh"

	// 画像及び効果音ファイル
	let imgShadow=dotCircle6s;
	let seHidden=seShadowHidden;
	let seSudden=seShadowSudden;

	let Lv=GetCommonDataDefault("Level",0);
	let n=GetArgument;

	// -------------------------------------------------------------------------
	@Initialize{

		// ステータス設定（ライフ、ダメージ率等）
		SetLife(200);
		SetDamageRateExDelay(60,80,40,50,50);

		// 実体化時の光
		LightShadow;

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 画面外で消滅
		GoneEx(40);

		// 当たり判定（自弾,体当たり）
		if(!m_bHidden){Collision(24,18);}

		// 使い魔基本処理
		BehaviorShadow(seHidden,seSudden);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		yield;

		// 初期移動
		let num=4;
		let gapX=(maxX-minX-80)/(num-1);
		let x=minX+40+gapX*n;
		let y=[minY+100,minY+70,minY+70,minY+100];
		let power=GetGapLength(GetX,GetY,x,y[n])*3;
		let angle=GetGapAngle(GetX,GetY,x,y[n]);
		let fr=60;
		SetMovePositionHermite(x,y[n],power,angle,0,0,fr);
		_Wait(60);

		// 扇状弾1
		loop(3){
			_Wait(60);
			WideShot1;
			_Wait(60);
		}

		// 移動
		let _x=GetX+rand(-60,60);
		let _y=maxY+40;
		let speed=1;
		fr=trunc(GetGapLength(GetX,GetY,_x,_y)/speed*1.1);
		SetMovePosition01(_x,_y,speed);

	}

	// 扇状弾1 -----------------------------------------------------------------
	task WideShot1{

		let x=GetX;
		let y=GetY;
		let num=10;
		let way=[1,3,5,7];
		let speed=[3, 3.4, 3.8, 4];
		let angle=GetAngleToPlayer;
		let wideAngle=[0,60,60,45];
		let graphic=BLUE31;
		let delay=5;
		let fr=4;

		ascent(let i in 0 .. num){
			SetShotDirectionType(ABSOLUTE);
			WideShot01(x,y,speed[Lv],angle,wideAngle[Lv],way[Lv],graphic,delay);
			_Wait(fr);
		}

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// 弾消し
		DestructShadow(40);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// 本体描画
		let x=64;
		let y=0;
		let sLength=64;
		let angle=2*m_nCount;
		let scale=0.8;
		SetColor(255,255,255);
		DrawShadow(imgShadow,x,y,sLength,angle,scale,scale);

	}

}
