//////////////////////////////////////////////////////////////////////
//====================================================================
//
//	東方夢終劇専用 プレイヤースクリプト共通ライブラリ
//		魔理沙専用 プレイヤー・スペル共通部
//
//====================================================================
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	上位ライブラリをインクルード
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

#include_function "script\thC\INCLUDE\withoutEvent.dnh"
#include_function "script\thC\INCLUDE\common.dnh"


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	インデックスをインクルード
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

#include_function "player\THC_MARISA\IMAGE\index.dnh"
#include_function "player\THC_MARISA\SE\index.dnh"


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	定数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

let PLAYER_LIST_POWERUP_COUNT = [ 8, 24, 48, 80, 128 ];


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	メンバ変数
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	弾幕風の仕様でアクセサを用意するだけで物凄い負荷になるので
//	メンバ変数は直接呼び出すこと

let m_bShot = false;
let m_bSlow = false;
let m_bLeft = false;
let m_bRight = false;
let m_bUserKey = false;
let m_nLastMoveCount = 0;
let m_nPowerPhase = 0;


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	共通動作
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	共通メインループ
function OnMainLoopCommon(){
	let nPower = GetCommonDataDefault( CD_ITEM_POWER, [ 128, 0 ][ GetCommonDataDefault( CD_THC_STAGE, false ) ] );
	descent( let i in 0..length( PLAYER_LIST_POWERUP_COUNT ) ){
		if( nPower >= PLAYER_LIST_POWERUP_COUNT[ i ] ){
			m_nPowerPhase = i;
			break;
		}
	}
	yield;
	m_nCount++;
}


//////////////////////////////////////////////////////////////////////
//--------------------------------------------------------------------
//	キー入力管理
//--------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////

//	キー入力チェック
task KeyCheck(){
	let nState;
	loop{
		nState = GetKeyState( VK_SHOT );
		m_bShot = ( nState == KEY_PUSH || nState == KEY_HOLD );
		nState = GetKeyState( VK_SLOWMOVE );
		m_bSlow = ( nState == KEY_PUSH || nState == KEY_HOLD );
		nState = GetKeyState( VK_USER );
		m_bUserKey = ( nState == KEY_PUSH || nState == KEY_HOLD );
		nState = GetKeyState( VK_LEFT );
		if( nState == KEY_PUSH ){ m_nLastMoveCount = m_nCount; }
		m_bLeft = ( nState == KEY_PUSH || nState == KEY_HOLD );
		nState = GetKeyState( VK_RIGHT );
		if( nState == KEY_PUSH ){ m_nLastMoveCount = m_nCount; }
		m_bRight = ( nState == KEY_PUSH || nState == KEY_HOLD );
		yield;
	}
}


