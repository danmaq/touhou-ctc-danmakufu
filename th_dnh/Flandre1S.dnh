#東方弾幕風
#Title[Flandre - スペルカード1]
#Text[ステージ1A 中ボス
フランドール・スカーレット



下記以外のスタート＝Hard
ｽｷｯﾌﾟ＋ﾕｰｻﾞｰ＋ｽﾀｰﾄ＝Lunatic]
#Image[]
#BackGround[Default]
#Player[FREE]
#ScriptVersion[2]

script_enemy_main{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Enemy.dnh"

	// 画像及び効果音ファイル
	let imgBoss=dotBossFlandre;
	let imgShadow=dotCircle6s;
	let seHidden=seShadowHidden;
	let seSudden=seShadowSudden;

	// 難易度
	Debug_SetLevel;
	let Lv=GetCommonDataDefault("Level",0);
	if(Lv<3){Lv=0;}
	else{Lv=1;}

	// -------------------------------------------------------------------------
	@Initialize{

		// 画像及び効果音をロード
		LoadGraphic(imgBoss);
		LoadGraphic(imgShadow);
		LoadSE(seHidden);
		LoadSE(seSudden);

		// スペルカード設定（カード名、スコア、制限時間、弾削除範囲等）
		SetText("＊符「＊＊＊」");
		SetScore(100000);
		SetTimer(64);
		SetShotAutoDeleteClip(20,40,20,20);
		SetEnemyMarker(true);

		// ボスステータス設定（ライフ、ダメージ率等）
		SetLife(500);
		SetDamageRate(15,10);

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 当たり判定（自弾,体当たり）
		Collision(32,24);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		SetInvincibility(242);
		_Wait(2);

		// 初期移動
		let fr=120;
		let x=cenX;
		let y=minY+160;
		SetMovePosition02(x,y,fr);
		_Wait(fr);

		// 発動
		fr=120;
		Concentration01(fr);
		_Wait(fr);

		let turn=0;

		loop{

			// 使い魔召喚
			SummonShadow(turn);
			_Wait(150);

			if(turn<12){turn++;}

		}

	}

	// 使い魔召喚＆側面弾 ------------------------------------------------------
	task SummonShadow(let turn){

		// 使い魔召喚
		let way=trunc(7+5*Lv+turn/2);
		let speed=2;
		let wayAngle=(150+25*Lv)/(way-1);
		let baseAngle=GetAngleToPlayer-180-wayAngle*(way-1)/2;

		ascent(let i in 0 .. way){
			let angle=baseAngle+wayAngle*i;
			CreateEnemyFromScript("Shadow",GetX,GetY,speed,angle,0);
		}

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// アイテム放出
		DropItem(16,80);

		// ロードしたファイルを削除
		DeleteGraphic(imgBoss);
		DeleteGraphic(imgShadow);
		DeleteSE(seHidden);
		DeleteSE(seSudden);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// ボス描画
		let x=0;
		let y=0;
		let sLength=128;
		SetAlpha(255);
		SetColor(255,255,255);
		_DrawChrRectSqr(imgBoss,GetX,GetY,x,y,sLength);

	}

}

// 使い魔 ----------------------------------------------------------------------
script_enemy Shadow{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Shadow.dnh"

	// 画像及び効果音ファイル
	let imgShadow=dotCircle6s;
	let seHidden=seShadowHidden;
	let seSudden=seShadowSudden;

	let Lv=GetCommonDataDefault("Level",0);

	// -------------------------------------------------------------------------
	@Initialize{

		// ステータス設定（ライフ、ダメージ率等）
		SetLife(5);
		SetDamageRateExDelay(60,15,10,100,100);

		// 実体化時の光
		LightShadow;

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 画面外で消滅
		GoneEx(40);

		// 当たり判定（自弾,体当たり）
		if(!m_bHidden){Collision(24,18);}

		// 使い魔基本処理
		BehaviorShadow(seHidden,seSudden);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		yield;

		// 後方弾
		TailShot;

	}

	// 後方弾 ------------------------------------------------------------------
	task TailShot{

		let turn=4;
		let num=5;
		let speed=1.5;
		let tailAngle=0;
		let addAngle=40/(num*turn);
		let delay=5;
		let graphic=[ORANGE11,YELLOW11,GREEN11,AQUA11];
		let assign=1;
		let turnFr=20;
		let numFr=trunc(turnFr/num);

		ascent(let i in 0 .. turn){
			ascent(let j in 0 .. num){
				let angle=GetAngle+180+tailAngle*assign;
				SetShotDirectionType(ABSOLUTE);
				CreateShot01(GetX,GetY,speed,angle,graphic[i],delay);
				_Wait(numFr);
				tailAngle+=addAngle;
			}
			assign*=-1;
		}

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// 弾消し
		DestructShadow(40);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// 本体描画
		let x=64;
		let y=0;
		let sLength=64;
		let angle=2*m_nCount;
		let scale=0.8;
		SetColor(255,255,255);
		DrawShadow(imgShadow,x,y,sLength,angle,scale,scale);

	}

}
