script_enemy_main
{

#include_function ".\INCLUDE\Enemy.dnh"

//変数宣言--------------------------------------
	let count=0;
	let Level=GetCommonData("Level");
	let angle_b=GetAngleToPlayer();
//タスクの作成----------------------------------
task MainAction()
{
	yield;
	_Wait(30);

	if(Level>1)
	{
		let n=0;
		loop([0,0,2,5][Level])
		{
			CircleShot01( [0,0,12,8][Level], SlowDown( 3 , 1.5 , n , [0,0,2,5][Level] ) , WHITE11 , 20 );
			n++;
		}
	}

	_Wait(30);

	let angle=-180;
	while(angle<180)
	{
		CreateEnemyFromScript("t_ma_01",GetX(),GetY(),5,angle,0);
		angle+=[60,45,45,30][Level];
	}
	
	let angle=GetAngleToPlayer();
	let m=0;
	loop(40)
	{
		CreateShot01(GetX(),GetY(),Smooth( 0.8 , 6 , m , 40 ),angle+rand(-5,5),WHITE04,0);
		m++;
		yield;
	}
	
}
task SubAction01()
{
	yield;
	let spmax=GetSpeed();
	let i=0;
	loop(50)
	{
		SetSpeed(SlowDown( spmax , 0 , i , 50 ));
		i++;
		yield;
	}
	_Wait(400);
	VanishEnemy();

}

//実行部分---------------------------------------

	@Initialize
	{
		SetLife(100);
		SetInvincibility( 120 );
		MainAction();
		SubAction01();
	}
	
	@MainLoop
	{
		Gone();
		Deletemine();
		yield;
		Collision(16 , 12);
		count++;
		//敵画像代わり------------------------------------
		if(int(count/2)==count/2)
		{
			CreateShotA(0,GetX(),GetY(),0);
			SetShotDataA(0,0,0,GetAngle(),0,0,0,RED22);
			SetShotKillTime(0,2);
			FireShot(0);
		}
		//------------------------------------------------

	}
	@DrawLoop
	{
	}
	@Finalize
	{
		DropItem( 5 , 20 );
	}
}

////////////////////////////////////////////////////////////////////////
//仮の使い魔、使い魔の書式の統一が必要なので雛形の作成をお願いします
////////////////////////////////////////////////////////////////////////

script_enemy t_ma_01
{

#include_function ".\INCLUDE\Shadow.dnh"

	let count=0;
	let scale=0;
	let Level=GetCommonData("Level");

task MainAction()
{
	yield;
	_Wait(int(rand(0,15)));
	while( !IsOut( 32 ) )
	{
		if( ((GetPlayerX()-GetX())^2+(GetPlayerY()-GetY())^2)^0.5 >= 20){CreateShot01(GetX(),GetY(),0,0,RED04,0);}
		_Wait([40,25,20,15][Level]);
	}
}

task SubAction()
{
	yield;
	SetMovePositionHermite(GetPlayerX(),GetClipMaxY()+50,600,GetAngle(),0,GetAngle(),250);

}

	@Initialize
	{	
		SetLife(80);
		LoadGraphic(dotCircle6s);
		MainAction();
		SubAction();
	}
	@MainLoop
	{
		yield;
		Deletemine();
		BehaviorShadow( 0,0 );
		count++;
		scale=Smooth( 0,1,count,40 );

	if( IsOut( 32 ) ){ SetSpeed(0);AddLife(10); }

	if(BeParentVanished()){VanishEnemy();}

		if(GetKeyState(VK_SLOWMOVE)==KEY_FREE)
		{
			Collision( 16,0 );
			if(int(count/3)==count/3)
			{
				CreateShotA(0,GetX(),GetY(),10);
				SetShotDataA(0,0,0,0,0,0,0,WHITE05);
				SetShotKillTime(0,0);
				FireShot(0);
			}
		}
	}
	@DrawLoop
	{
		SetTexture(dotCircle6s);
		SetGraphicRect(0,0,64,64);
		if(GetKeyState(VK_SLOWMOVE)==KEY_PUSH||GetKeyState(VK_SLOWMOVE)==KEY_HOLD){
			SetAlpha(127);
			SetGraphicScale(0.8,0.8);
		}
		else{
			SetAlpha(255);
			SetGraphicScale(0.5,0.5);
		}
		SetColor(255,255,255);
		SetGraphicAngle(0,0,count*2);
		DrawGraphic(GetX,GetY);
	}
	@Finalize{
			DestructShadow( 40 );
			if(BeParentVanished() || BeVanished()){DeleteEnemyShot(CHILD);}
			else{DeleteEnemyShotToItem(CHILD);}
		}
}
