#東方弾幕風
#Title[Remilia - スペルカード1]
#Text[ステージ2A ボス
レミリア・スカーレット

下記以外のスタート＝Easy
スキップ＋スタート＝Normal
ユーザー＋スタート＝Hard
ｽｷｯﾌﾟ＋ﾕｰｻﾞｰ＋ｽﾀｰﾄ＝Lunatic]
#Image[]
#BackGround[Default]
#Player[FREE]
#ScriptVersion[2]

script_enemy_main{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Enemy.dnh"

	// 画像及び効果音ファイル
	let imgBoss=dotBossRemilia;

	// 難易度
	Debug_SetLevel;
	let Lv=GetCommonDataDefault("Level",0);

	// -------------------------------------------------------------------------
	@Initialize{

		// 画像及び効果音をロード
		LoadGraphic(imgBoss);

		// スペルカード設定（カード名、スコア、制限時間、弾削除範囲等）
		SetText("＊符「＊＊＊」");
		SetScore(100000);
		SetTimer(63);
		SetShotAutoDeleteClip(100,32,100,100);
		SetEnemyMarker(true);

		// ボスステータス設定（ライフ、ダメージ率等）
		SetLife(500);
		SetDamageRate(5,3);

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 当たり判定（自弾,体当たり）
		Collision(32,24);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		SetInvincibility(242);
		_Wait(2);

		// 初期移動
		let fr=180;
		let x=cenX;
		let y=minY+120+RandBlur(1);
		SetMovePosition02(x,y,fr);
		_Wait(fr);

		let assign=-1;
		let turn=0;

		loop{

			// 扇状機雷弾
			Concentration01(30);
			_Wait(30);
			WideMineShot(assign);
			_Wait(90);

			// 移動
			move(90);
			_Wait(120);

			if(Lv<2||turn==1){SetDamageRate(15,10);}
			turn++;
			assign*=-1;

		}

	}

	// 扇状機雷弾 --------------------------------------------------------------
	task WideMineShot(let assign){

		// 初期設定 ----------------------------------------
		let obj=Obj_Create(OBJ_SHOT);
		let fr=15;
		let speed=(GetY-minY)/fr;

		Obj_SetX(obj,GetX);
		Obj_SetY(obj,GetY);
		Obj_SetSpeed(obj,speed);
		Obj_SetAngle(obj,-90);
		ObjShot_SetGraphic(obj,PURPLE03);

		// メイン処理 --------------------------------------
		loop(fr){
			if(Obj_BeDeleted(obj)){break;}
			yield;
		}
		if(!Obj_BeDeleted(obj)){
			let way=11+2*Lv;
			let wayAngle=180/(way-1);
			way+=2;
			let baseAngle=90-wayAngle*(way-1)/2+RandBlur(wayAngle);
			SetShotDirectionType(ABSOLUTE);
			ascent(let i in 0 .. way){
				let angle=baseAngle+wayAngle*i;
				MineShot(Obj_GetX(obj),Obj_GetY(obj),angle,assign);
			}
			Obj_Delete(obj);
		}

	}

	// 機雷弾 ------------------------------------------------------------------
	function MineShot(let x, let y, let angle, let assign){

		// 設置弾
		let speed=5;
		let graphic=PURPLE03;

		// 機雷弾
		let num=13;
		let _speed=1.5;
		let _angle=angle;
		let numAngle=180/(num-1)*assign;
		let _graphic=RED04;
		let delay=5;
		let waitFr=240;
		if(Lv>=2){waitFr*=2;}
		let shotFr=0;
		let numShotFr=7;

		SetShotDirectionType(ABSOLUTE);
		CreateShotA(0,x,y,0);
		SetShotDataA(0,0,speed,angle,0,0,0,graphic);
		loop(num){
			waitFr-=numShotFr;
			shotFr+=numShotFr;
			CreateShotA(1,0,0,delay);
			SetShotDataA(1,0,0,_angle,0,0,0,_graphic);
			SetShotDataA(1,waitFr,_speed,NULL,0,0,0,_graphic);
			AddShot(shotFr,0,1,0);
			_angle+=numAngle;
		}
		FireShot(0);

	}

	// 移動 --------------------------------------------------------------------
	function move(let fr){

		let x=GetX;
		let y=GetY;
		let mx=rand(40,80);
		let my=rand(0,10);
		if(x>=GetPlayerX){
			if(x-mx>=minX+100){mx=-mx;}
		}
		else{
			if(x+mx>=maxX-100){mx=-mx;}
		}
		if(y>=minY+120){my=-my;}
		x+=mx;
		y+=my;
		let power=GetGapLength(GetX,GetY,x,y)*2;
		let angle=GetGapAngle(GetX,GetY,x,y);
		SetMovePositionHermite(x,y,power,angle,0,0,fr);

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// アイテム放出
		DropItem(16,80);

		// ロードしたファイルを削除
		DeleteGraphic(imgBoss);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// ボス描画
		let x=0;
		let y=0;
		let sLength=128;
		SetAlpha(255);
		SetColor(255,255,255);
		_DrawChrRectSqr(imgBoss,GetX,GetY,x,y,sLength);

	}

}
