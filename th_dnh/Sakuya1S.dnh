#東方弾幕風
#Title[Sakuya - スペルカード1]
#Text[ステージ2A 中ボス
十六夜 咲夜

下記以外のスタート＝Easy
スキップ＋スタート＝Normal
ユーザー＋スタート＝Hard
ｽｷｯﾌﾟ＋ﾕｰｻﾞｰ＋ｽﾀｰﾄ＝Lunatic]
#Image[]
#BackGround[Default]
#Player[FREE]
#ScriptVersion[2]

script_enemy_main{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Enemy.dnh"

	// 画像及び効果音ファイル
	let imgBoss=dotBossSakuya;

	// 難易度
	Debug_SetLevel;
	let Lv=GetCommonDataDefault("Level",0);

	// -------------------------------------------------------------------------
	@Initialize{

		// 画像及び効果音をロード
		LoadGraphic(imgBoss);

		// スペルカード設定（カード名、スコア、制限時間、弾削除範囲等）
		SetText("＊符「＊＊＊」");
		SetScore(100000);
		SetTimer(61);
		SetShotAutoDeleteClip(20,20,20,20);
		SetEnemyMarker(true);

		// ボスステータス設定（ライフ、ダメージ率Shot%,Bomb%等）
		SetLife(500);
		SetDamageRate(15,10);

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 当たり判定（自弾,体当たり）
		Collision(32,24);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		SetInvincibility(182);
		_Wait(2);

		// 初期移動
		let fr=180;
		let x=cenX;
		let y=minY+120;
		SetMovePosition02(x,y,fr);
		_Wait(fr);

		let turn=0;

		loop{

			fr=30;
			let count=180;

			// ランダム狙い弾
			loop(6){
				RandomSearchShot(count,turn);
				_Wait(fr);
				count-=fr;
				turn++;
				if(count==90){Concentration01(90);}
			}

			// 時間停止
			TimeStop(60,1,1,1);
			_Wait(60);

		}

	}

	// ランダム狙い弾 ----------------------------------------------------------
	task RandomSearchShot(let count, let turn){

		let way=[36,48,36,48];
		let speed=1.2;
		let wayAngle=360/way[Lv];
		let baseAngle=-90+wayAngle*0.45*turn;

		ascent(let i in 0 .. way[Lv]){
			let angle=baseAngle+wayAngle*i;
			SearchShot(speed,angle,count);
		}

	}

	// 狙い弾 ------------------------------------------------------------------
	task SearchShot(let speed, let angle, let count){

		// 初期設定 ----------------------------------------
		let obj=Obj_Create(OBJ_SHOT);
		let delay=20;

		Obj_SetX(obj,GetX);
		Obj_SetY(obj,GetY);
		Obj_SetSpeed(obj,speed);
		Obj_SetAngle(obj,angle);
		ObjShot_SetDelay(obj,delay);
		ObjShot_SetGraphic(obj,PURPLE32);

		// メイン処理 --------------------------------------
		loop{
			if(Obj_BeDeleted(obj)){break;}
			count--;
			if(count==0){break;}
			yield;
		}

		let ratio=20;
		if(Lv<2){ratio=30;}
		if(!Obj_BeDeleted(obj)&&rand(0,100)<ratio){
			let fr=20;
			let decAlpha=255/fr;
			let accScale=0.05;
			Explosion01(Obj_GetX(obj),Obj_GetY(obj),decAlpha,accScale,fr);
			ObjShot_SetGraphic(obj,GREEN32);
			let fr=45;
			let accAngle=720/fr;
			loop(fr){
				if(Obj_BeDeleted(obj)){break;}
				angle+=accAngle;
				Obj_SetAngle(obj,angle);
				yield;
			}
			if(!Obj_BeDeleted(obj)){
				let speed_=[3.2, 4, 3.2, 4];
				let angle_=GetAngleToPlayer;
				if(Lv<2){angle_=GetGapAngle(Obj_GetX(obj),Obj_GetY(obj),GetPlayerX,GetPlayerY);}
				Obj_SetSpeed(obj,speed_[Lv]);
				Obj_SetAngle(obj,angle_);
			}
		}

	}

	// 移動 --------------------------------------------------------------------
	function move(let fr){

		let x=GetX;
		let y=GetY;
		let mx=rand(20,40);
		let my=rand(0,20);
		if(x>=GetPlayerX){
			if(x-mx>=minX+100){mx=-mx;}
		}
		else{
			if(x+mx>=maxX-100){mx=-mx;}
		}
		if(y>=minY+120){my=-my;}
		x+=mx;
		y+=my;
		let power=GetGapLength(GetX,GetY,x,y)*2;
		let angle=GetGapAngle(GetX,GetY,x,y);
		SetMovePositionHermite(x,y,power,angle,0,0,fr);

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// アイテム放出
		DropItem(16,80);

		// ロードしたファイルを削除
		DeleteGraphic(imgBoss);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// ボス描画
		let x=0;
		let y=0;
		let sLength=128;
		SetAlpha(255);
		SetColor(255,255,255);
		_DrawChrRectSqr(imgBoss,GetX,GetY,x,y,sLength);

	}

}
