#東方弾幕風
#Title[Remilia - 通常攻撃1]
#Text[ステージ2A ボス
レミリア・スカーレット

下記以外のスタート＝Easy
スキップ＋スタート＝Normal
ユーザー＋スタート＝Hard
ｽｷｯﾌﾟ＋ﾕｰｻﾞｰ＋ｽﾀｰﾄ＝Lunatic]
#Image[]
#BackGround[Default]
#Player[FREE]
#ScriptVersion[2]

script_enemy_main{

	// 共通関数読み込み
	#include_function ".\INCLUDE\Enemy.dnh"

	// 画像及び効果音ファイル
	let imgBoss=dotBossRemilia;

	// 難易度
	Debug_SetLevel;
	let Lv=GetCommonDataDefault("Level",0);

	// -------------------------------------------------------------------------
	@Initialize{

		// 画像及び効果音をロード
		LoadGraphic(imgBoss);

		// スペルカード設定（カード名、スコア、制限時間、弾削除範囲等）
		SetTimer(37);
		SetShotAutoDeleteClip(32,32,32,32);
		SetEnemyMarker(true);

		// ボスステータス設定（ライフ、ダメージ率等）
		SetLife(2500);
		SetDamageRate(100,50);
		SetX(cenX);
		SetY(minY+120+RandBlur(1));

		Main;

	}

	// -------------------------------------------------------------------------
	@MainLoop{

		// 当たり判定（自弾,体当たり）
		Collision(32,24);

		// カウンタ加算
		m_nCount++;

		yield;

	}

	// メイン処理 --------------------------------------------------------------
	task Main{

		SetInvincibility(62);
		_Wait(2);

		// 発動
		ExplosionBoss;
		_Wait(60);

		loop{

			// 破裂弾
			Concentration01(30);
			_Wait(30);
			CrackShot;
			_Wait(45);

			// クロス直線弾
			let assign=1;
			let ly=rand(20,40);
			if(GetX<cenX){assign=-1;}
			CrossLineShot(ly,assign);
			_Wait(30);
			CrossLineShot(ly,-assign);
			_Wait(75);

			// 移動
			move(90);
			_Wait(90);

		}

	}

	// 破裂弾 ------------------------------------------------------------------
	task CrackShot{

		// 初期設定 ----------------------------------------
		let obj=Obj_Create(OBJ_SHOT);
		let fr=15;
		let speed=(GetY-minY)/fr;
		let graphic=RED03;

		Obj_SetX(obj,GetX);
		Obj_SetY(obj,GetY);
		Obj_SetSpeed(obj,speed);
		Obj_SetAngle(obj,-90);
		ObjShot_SetGraphic(obj,graphic);

		// メイン処理 --------------------------------------
		loop(fr){
			if(Obj_BeDeleted(obj)){break;}
			yield;
		}
		if(!Obj_BeDeleted(obj)){
			let way=11+2*Lv;
			let num=6;
			let minSpeed=2.5;
			let maxSpeed=5;
			let wayAngle=180/(way-1);
			way+=2;
			let wideAngle=180+wayAngle*2;
			let angle=90+RandBlur(wayAngle);
			SetShotDirectionType(ABSOLUTE);
			WideLineShot(Obj_GetX(obj),Obj_GetY(obj),minSpeed,maxSpeed,angle,wideAngle,way,num,graphic,0);
			Obj_Delete(obj);
		}

	}

	// クロス直線弾 ------------------------------------------------------------
	task CrossLineShot(let ly, let assign){

		let num=3+Lv;
		let way=32+4*Lv;
		let lx=cenX-minX;
		let lineX1=cenX-lx*assign;
		let lineX2=cenX+lx*assign;
		let gapX=(lineX2-lineX1)/(way-1);
		let lineY1=cenY+ly;
		let lineY2=cenY-ly;
		let gapY=(lineY2-lineY1)/(way-1);
		let graphic=RED32;
		let delay=10;
		let fr=1;

		ascent(let i in 0 .. way){
			let x=lineX1+gapX*i;
			let y=lineY1+gapY*i;
			let minSpeed=GetGapLength(GetX,GetY,x,y)/120;
			let maxSpeed=minSpeed*(2.4+0.4*Lv);
			let angle=GetGapAngle(GetX,GetY,x,y);
			SetShotDirectionType(ABSOLUTE);
			LineShot(GetX,GetY,minSpeed,maxSpeed,angle,num,graphic,delay);
			_Wait(fr);
		}

	}

	// 移動 --------------------------------------------------------------------
	function move(let fr){

		let x=GetX;
		let y=GetY;
		let mx=rand(30,60);
		let my=rand(0,20);
		if(x>=GetPlayerX){
			if(x-mx>=minX+100){mx=-mx;}
		}
		else{
			if(x+mx>=maxX-100){mx=-mx;}
		}
		if(y>=minY+120){my=-my;}
		x+=mx;
		y+=my;
		let power=GetGapLength(GetX,GetY,x,y)*2;
		let angle=GetGapAngle(GetX,GetY,x,y);
		SetMovePositionHermite(x,y,power,angle,0,0,fr);

	}

	// -------------------------------------------------------------------------
	@Finalize{

		// ロードしたファイルを削除
		DeleteGraphic(imgBoss);

	}

	// -------------------------------------------------------------------------
	@DrawLoop{

		// ボス描画
		let x=0;
		let y=0;
		let sLength=128;
		SetAlpha(255);
		SetColor(255,255,255);
		_DrawChrRectSqr(imgBoss,GetX,GetY,x,y,sLength);

	}

}
